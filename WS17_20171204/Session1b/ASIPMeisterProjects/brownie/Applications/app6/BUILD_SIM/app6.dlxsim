	.section	.text
	.section	.text
	.addressing	Word
	
	XOR	R4, R4, R4
	XOR	R5, R5, R5
	XOR	R6, R6, R6
	ADDI	R4, R0, $(0xFFFFC / 0x10000)
	ADDI	R5, R0, $(0xFFFFC / 0x10000)

	LSOI	R4, R4, $(0xFFFFC % 0x10000)
	LSOI	R5, R5, $(0xFFFFC % 0x10000)

	SW	-4(R5), R4
	SW	-8(R5), R3
	ADDI	R5, R4, $(-8)

	JPL	_main	
	SW	0(R5), R21
	JPL	_exit
	.addressing	Word

_main:	
	LW	R27, _C(R0)
	ADDI	R21, R0, $(10)
	ADDI	R27, R27, $(5)
_loop:	
	LW	R26, _B(R24)
	SUBI	R21, R21, $(1)
	ADD	R26, R26, R27
	SW	_A(R24), R26
	ADDI	R24, R24, $(4)
	BRNZ	R21, $(_loop)
	NOP

	TRAP #0
	
	.section	.text
	.addressing	Word
	nop
_exit:
	nop
	nop
	trap	#0	; HALT


	.section	.data
	.addressing	Word



_A:	.data.32	0
	.data.32	0
	.data.32	0
	.data.32	0
	.data.32	0
	.data.32	0
	.data.32	0
	.data.32	0
	.data.32	0
	.data.32	0

_B:	.data.32	1
	.data.32	2
	.data.32	3
	.data.32	4
	.data.32	5
	.data.32	6
	.data.32	7
	.data.32	8
	.data.32	9
	.data.32	10

_C:	.data.32	42

