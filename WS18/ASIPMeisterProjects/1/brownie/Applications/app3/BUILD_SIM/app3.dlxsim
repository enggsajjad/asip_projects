	.section	.text
	.addressing	Word
	xor	r4, r4, r4
	xor	r5, r5, r5
	xor	r6, r6, r6
	addi	r4, r0, $(0x0017EFFC / 0x10000)
	addi	r5, r0, $(0x0017EFFC / 0x10000)

	lsoi	r4, r4, $(0x0017EFFC % 0x10000)
	lsoi	r5, r5, $(0x0017EFFC % 0x10000)

	sw	-4(r5), r4
	sw	-8(r5), r3
	addi	r5, r4, $(-8)

	jpl	_main	
	sw	0(r5), r21
	jpl	_exit



	.section	.text
	.addressing	.Word
;	.align 2
;	.globl	_main
;	.type	_main, @function
_main:
	ADDI	R21, R0, #15
	ADDI	R22, R0, #9

	ELT	R23, R21, R22
	BRZ	R23, _labL_3_Branch_1
;FIRST NOP
	;NOP
	ADD	R24, R0, R22
	JP	_labL_3_Branch_2
;SECOND NOP
	;NOP

_labL_3_Branch_1:
	ADD	R24, R0, R21

_labL_3_Branch_2:
	NOP	; ... compute anything with the result in r4 ...



	jpr	r3		; return
;	.size	_main, .-_main
;	.ident	"GCC: (GNU) 4.2.2"




_exit: 
	trap	#0	; HALT


