----------------------------------------------------------------------
-- Copyright (C) 2011 ASIP Solutions, Inc. All rights reserved. 
-- Generated by ASIP Meister 2.3 on 2018/12/03 18:20:54 
----------------------------------------------------------------------

-----------------------------------------------------------
-- Entity Name: rtg_controller
-----------------------------------------------------------

library IEEE;
use IEEE.std_logic_1164.all;

entity rtg_controller is
  port (
    CLK : in std_logic;
    RST : in std_logic;
    INTREQ_RESET : in std_logic;
    INTREQ_EXTINT_IN : in std_logic;
    DATAIN_DUMMY_STREG_DATA_OUT : in std_logic_vector(31 downto 0);
    CTRLIN_CMPEQ_02_EXE : in std_logic;
    CTRLIN_CMPNEQ_00_EXE : in std_logic;
    CTRLIN_MUL_FIN : in std_logic;
    CTRLOUT_MUL_CLEAR : out std_logic;
    CTRLIN_DIV_FIN : in std_logic;
    CTRLOUT_DIV_CLEAR : out std_logic;
    CTRLIN_DMAU_ACK_IN : in std_logic;
    CTRLOUT_DMAU_CANCEL_OUT : out std_logic;
    DATAIN_PC_DATA_OUT : in std_logic_vector(31 downto 0);
    DATAOUT_SAVED_PC : out std_logic_vector(31 downto 0);
    DATAOUT_DS_OFFSET : out std_logic;
    DATAIN_IR_DATA_OUT : in std_logic_vector(31 downto 0);
    CTRLOUT_IR_ENB : out std_logic;
    CTRLOUT_PC_HOLD : out std_logic;
    CTRLOUT_DUMMY_STREG_ENB : out std_logic;
    CTRLOUT_ALU_MODE : out std_logic_vector(4 downto 0);
    CTRLOUT_ALU_CIN : out std_logic;
    CTRLOUT_GPR_FLAG_ENB : out std_logic;
    CTRLOUT_FWU0_FW1 : out std_logic;
    CTRLOUT_FWU1_FW1 : out std_logic;
    CTRLOUT_GPR_W_ENB0 : out std_logic;
    CTRLOUT_FWU0_FW2 : out std_logic;
    CTRLOUT_FWU1_FW2 : out std_logic;
    CTRLOUT_MUL_MODE : out std_logic;
    CTRLOUT_DIV_MODE : out std_logic;
    CTRLOUT_SFTVAR_MODE : out std_logic_vector(1 downto 0);
    CTRLOUT_EXT16TO32_MODE : out std_logic;
    CTRLOUT_DMAU_RW_OUT : out std_logic;
    CTRLOUT_DMAU_MODE_OUT : out std_logic_vector(1 downto 0);
    CTRLOUT_DMAU_EXT_OUT : out std_logic;
    CTRLOUT_PC_LOAD : out std_logic;
    CTRLOUT_EXT26TO32_MODE : out std_logic;
    CTRLOUT_TRAP_HAND_REG_ENB : out std_logic;
    CTRLOUT_GPR_STATUS_ENB : out std_logic;
    CTRLOUT_EXT8TO32_MODE : out std_logic;
    CTRLOUT_EXT16TO32A_MODE : out std_logic;
    CTRLOUT_MUL_START : out std_logic;
    CTRLOUT_DIV_START : out std_logic;
    CTRLOUT_DMAU_REQ_OUT : out std_logic;
    CTRLOUT_EXTCATCH_OUT_WMODE : out std_logic;
    CTRLOUT_GPR_RESET : out std_logic;
    CTRLOUT_IR_RESET : out std_logic;
    CTRLOUT_DIV_RESET : out std_logic;
    CTRLOUT_MUL_RESET : out std_logic;
    CTRLOUT_TRAP_HAND_REG_RESET : out std_logic;
    CTRLOUT_UA_MUX00_SEL : out std_logic;
    CTRLOUT_UA_MUX01_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX02_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX03_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX04_SEL : out std_logic;
    CTRLOUT_UA_MUX05_SEL : out std_logic_vector(3 downto 0);
    CTRLOUT_UA_MUX06_SEL : out std_logic;
    CTRLOUT_UA_MUX07_SEL : out std_logic_vector(3 downto 0);
    CTRLOUT_UA_MUX08_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX09_SEL : out std_logic;
    CTRLOUT_UA_MUX10_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX11_SEL : out std_logic;
    CTRLOUT_UA_MUX12_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX13_SEL : out std_logic_vector(3 downto 0);
    CTRLOUT_UA_MUX14_SEL : out std_logic;
    CTRLOUT_UA_MUX15_SEL : out std_logic_vector(3 downto 0);
    CTRLOUT_UA_MUX16_SEL : out std_logic;
    CTRLOUT_UA_MUX17_SEL : out std_logic;
    CTRLOUT_UA_MUX18_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX19_SEL : out std_logic;
    CTRLOUT_UA_MUX20_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX21_SEL : out std_logic;
    CTRLOUT_UA_MUX22_SEL : out std_logic_vector(1 downto 0);
    CTRLOUT_UA_MUX23_SEL : out std_logic;
    CTRLOUT_UA_MUX24_SEL : out std_logic_vector(3 downto 0);
    CTRLOUT_UA_MUX25_SEL : out std_logic_vector(2 downto 0);
    CTRLOUT_UA_MUX26_SEL : out std_logic;
    CTRLOUT_UA_PREG00_ENB : out std_logic;
    CTRLOUT_UA_PREG01_ENB : out std_logic;
    CTRLOUT_UA_PREG02_ENB : out std_logic;
    CTRLOUT_UA_PREG03_ENB : out std_logic;
    CTRLOUT_UA_PREG04_ENB : out std_logic;
    CTRLOUT_UA_PREG05_ENB : out std_logic;
    CTRLOUT_UA_PREG06_ENB : out std_logic;
    CTRLOUT_UA_PREG07_ENB : out std_logic;
    CTRLOUT_UA_PREG08_ENB : out std_logic;
    CTRLOUT_UA_PREG09_ENB : out std_logic;
    CTRLOUT_UA_PREG10_ENB : out std_logic;
    CTRLOUT_UA_PREG11_ENB : out std_logic;
    CTRLOUT_UA_PREG12_ENB : out std_logic;
    CTRLOUT_UA_PREG13_ENB : out std_logic;
    CTRLOUT_UA_PREG14_ENB : out std_logic;
    CTRLOUT_UA_PREG15_ENB : out std_logic;
    CTRLOUT_UA_PREG16_ENB : out std_logic;
    CTRLOUT_UA_PREG17_ENB : out std_logic;
    CTRLOUT_UA_PREG18_ENB : out std_logic;
    CTRLOUT_UA_PREG19_ENB : out std_logic;
    CTRLOUT_UA_MUX27_SEL : out std_logic;
    CTRLOUT_UA_MUX28_SEL : out std_logic;
    CTRLOUT_UA_MUX29_SEL : out std_logic;
    CTRLOUT_UA_MUX30_SEL : out std_logic;
    CTRLOUT_UA_MUX31_SEL : out std_logic;
    CTRLOUT_UA_MUX32_SEL : out std_logic
  );
end entity rtg_controller;

architecture RTL of rtg_controller is
  component rtg_proc_fsm
  port (
    CLK : in std_logic;
    RST : in std_logic;
    INTR_REQ : in std_logic;
    INTR_DETECT : in std_logic;
    INTR_CANCEL : in std_logic;
    INTR_HANDLING : out std_logic;
    INTR_PENDING : out std_logic;
    FETCH_ENB : out std_logic
  );
  end component rtg_proc_fsm;

  component rtg_register_w1
  port (
    CLK : in std_logic;
    RST : in std_logic;
    ENB : in std_logic;
    DIN : in std_logic;
    DOUT : out std_logic
  );
  end component rtg_register_w1;

  component rtg_register_w2
  port (
    CLK : in std_logic;
    RST : in std_logic;
    ENB : in std_logic;
    DIN : in std_logic_vector(1 downto 0);
    DOUT : out std_logic_vector(1 downto 0)
  );
  end component rtg_register_w2;

  component rtg_register_w32
  port (
    CLK : in std_logic;
    RST : in std_logic;
    ENB : in std_logic;
    DIN : in std_logic_vector(31 downto 0);
    DOUT : out std_logic_vector(31 downto 0)
  );
  end component rtg_register_w32;

  component rtg_register_w64
  port (
    CLK : in std_logic;
    RST : in std_logic;
    ENB : in std_logic;
    DIN : in std_logic_vector(63 downto 0);
    DOUT : out std_logic_vector(63 downto 0)
  );
  end component rtg_register_w64;

  component rtg_register_w14
  port (
    CLK : in std_logic;
    RST : in std_logic;
    ENB : in std_logic;
    DIN : in std_logic_vector(13 downto 0);
    DOUT : out std_logic_vector(13 downto 0)
  );
  end component rtg_register_w14;

  constant INTR_RESET : std_logic_vector(1 downto 0) := "00";
  constant INTR_EXTINT : std_logic_vector(1 downto 0) := "01";
  constant INTR_TRAPINT : std_logic_vector(1 downto 0) := "10";

  signal interrupt_handling : std_logic;
  signal fetch_enb : std_logic;
  signal intr_detected : std_logic;
  signal intr_pending : std_logic;
  signal intr_cancel : std_logic;
  signal intr_request : std_logic;
  signal internal_intr_req_IF : std_logic;
  signal internal_intr_req_ID : std_logic;
  signal internal_intr_req_EXE : std_logic;
  signal internal_intr_req_WB : std_logic;
  signal intr_req_IF : std_logic;
  signal intr_req_ID : std_logic;
  signal intr_req_EXE : std_logic;
  signal intr_req_WB : std_logic;
  signal stall_req_IF : std_logic;
  signal stall_req_ID : std_logic;
  signal stall_req_EXE : std_logic;
  signal stall_req_WB : std_logic;
  signal branch_req_IF : std_logic;
  signal branch_req_ID : std_logic;
  signal branch_req_EXE : std_logic;
  signal branch_req_WB : std_logic;
  signal intr_nreq_IF : std_logic;
  signal intr_nreq_ID : std_logic;
  signal intr_nreq_EXE : std_logic;
  signal intr_nreq_WB : std_logic;
  signal stall_nreq_IF : std_logic;
  signal stall_nreq_ID : std_logic;
  signal stall_nreq_EXE : std_logic;
  signal stall_nreq_WB : std_logic;
  signal branch_nreq_IF : std_logic;
  signal branch_nreq_ID : std_logic;
  signal branch_nreq_EXE : std_logic;
  signal branch_nreq_WB : std_logic;
  signal intr_acc_IF : std_logic;
  signal intr_acc_ID : std_logic;
  signal intr_acc_EXE : std_logic;
  signal intr_acc_WB : std_logic;
  signal stall_acc_IF : std_logic;
  signal stall_acc_ID : std_logic;
  signal stall_acc_EXE : std_logic;
  signal stall_acc_WB : std_logic;
  signal branch_acc_IF : std_logic;
  signal branch_acc_ID : std_logic;
  signal branch_acc_EXE : std_logic;
  signal branch_acc_WB : std_logic;
  signal const_bit1 : std_logic;
  signal const_bit0 : std_logic;
  signal do_stall_IF : std_logic;
  signal do_stall_ID : std_logic;
  signal do_stall_EXE : std_logic;
  signal do_stall_WB : std_logic;
  signal do_flush_IF : std_logic;
  signal do_flush_ID : std_logic;
  signal do_flush_EXE : std_logic;
  signal do_flush_WB : std_logic;
  signal advance_stage_IF : std_logic;
  signal advance_stage_ID : std_logic;
  signal advance_stage_EXE : std_logic;
  signal advance_stage_WB : std_logic;
  signal valid_stage_IF : std_logic;
  signal valid_stage_ID : std_logic;
  signal valid_stage_EXE : std_logic;
  signal valid_stage_WB : std_logic;
  signal pipereg_enb_IF : std_logic;
  signal pipereg_enb_ID : std_logic;
  signal pipereg_enb_EXE : std_logic;
  signal pipereg_enb_WB : std_logic;
  signal first_cycle_IF : std_logic;
  signal first_cycle_ID : std_logic;
  signal first_cycle_EXE : std_logic;
  signal first_cycle_WB : std_logic;
  signal prev_do_stall_IF : std_logic;
  signal intr_RESET_detected : std_logic;
  signal intr_EXTINT_detected : std_logic;
  signal cause_TRAPINT_inst_at_EXE_00 : std_logic;
  signal intr_TRAPINT_detected : std_logic;
  signal intr_code_detected_IF : std_logic_vector(1 downto 0);
  signal intr_code_detected_ID : std_logic_vector(1 downto 0);
  signal intr_code_detected_EXE : std_logic_vector(1 downto 0);
  signal intr_code_detected_WB : std_logic_vector(1 downto 0);
  signal intr_code : std_logic_vector(1 downto 0);
  signal intrpipe_code_in_IF : std_logic_vector(1 downto 0);
  signal intrpipe_code_in_ID : std_logic_vector(1 downto 0);
  signal intrpipe_code_in_EXE : std_logic_vector(1 downto 0);
  signal intrpipe_code_in_WB : std_logic_vector(1 downto 0);
  signal intrpipe_code_in_LAST : std_logic_vector(1 downto 0);
  signal intrpipe_code_IF : std_logic_vector(1 downto 0);
  signal intrpipe_code_ID : std_logic_vector(1 downto 0);
  signal intrpipe_code_EXE : std_logic_vector(1 downto 0);
  signal intrpipe_code_WB : std_logic_vector(1 downto 0);
  signal intrpipe_code_LAST : std_logic_vector(1 downto 0);
  signal intrpipe_req_in_IF : std_logic;
  signal intrpipe_req_in_ID : std_logic;
  signal intrpipe_req_in_EXE : std_logic;
  signal intrpipe_req_in_WB : std_logic;
  signal intrpipe_req_IF : std_logic;
  signal intrpipe_req_ID : std_logic;
  signal intrpipe_req_EXE : std_logic;
  signal intrpipe_req_WB : std_logic;
  signal any_intr_req_IF : std_logic;
  signal any_intr_req_ID : std_logic;
  signal any_intr_req_EXE : std_logic;
  signal any_intr_req_WB : std_logic;
  signal any_branch_IF : std_logic;
  signal any_branch_ID : std_logic;
  signal any_branch_EXE : std_logic;
  signal any_branch_WB : std_logic;
  signal intrpipe_saved_pc_in_IF : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_in_ID : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_in_EXE : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_in_WB : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_in_LAST : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_IF : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_ID : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_EXE : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_WB : std_logic_vector(31 downto 0);
  signal intrpipe_saved_pc_LAST : std_logic_vector(31 downto 0);
  signal intrpipe_ds_offset_in_IF : std_logic;
  signal intrpipe_ds_offset_in_ID : std_logic;
  signal intrpipe_ds_offset_in_EXE : std_logic;
  signal intrpipe_ds_offset_in_WB : std_logic;
  signal intrpipe_ds_offset_in_LAST : std_logic;
  signal intrpipe_ds_offset_IF : std_logic;
  signal intrpipe_ds_offset_ID : std_logic;
  signal intrpipe_ds_offset_EXE : std_logic;
  signal intrpipe_ds_offset_WB : std_logic;
  signal intrpipe_ds_offset_LAST : std_logic;
  signal branch_history_in_IF : std_logic;
  signal branch_history_in_ID : std_logic;
  signal branch_history_in_EXE : std_logic;
  signal branch_history_in_WB : std_logic;
  signal branch_history_IF : std_logic;
  signal branch_history_ID : std_logic;
  signal branch_history_EXE : std_logic;
  signal branch_history_WB : std_logic;
  signal intr_req_inside_DBS_IF : std_logic;
  signal intr_req_inside_DBS_ID : std_logic;
  signal intr_req_inside_DBS_EXE : std_logic;
  signal intr_req_inside_DBS_WB : std_logic;
  signal intr_propagation_cond_tmp_IF : std_logic;
  signal intr_propagation_cond_tmp_ID : std_logic;
  signal intr_propagation_cond_tmp_EXE : std_logic;
  signal intr_propagation_cond_tmp_WB : std_logic;
  signal intr_handling_x : std_logic;
  signal branch_inst_at_EXE_0 : std_logic;
  signal branch_inst_at_EXE_1 : std_logic;
  signal branch_inst_at_EXE_2 : std_logic;
  signal multcyc_MUL_start_c0_inst_EXE : std_logic;
  signal multcyc_MUL_start_ready_EXE : std_logic;
  signal multcyc_MUL_start_stall_EXE : std_logic;
  signal multcyc_DIV_start_c0_inst_EXE : std_logic;
  signal multcyc_DIV_start_ready_EXE : std_logic;
  signal multcyc_DIV_start_stall_EXE : std_logic;
  signal multcyc_DMAU_req_out_c0_inst_WB : std_logic;
  signal multcyc_DMAU_req_out_ready_WB : std_logic;
  signal multcyc_DMAU_req_out_stall_WB : std_logic;
  signal asgn_PC_load_inst_v0c0_EXE : std_logic;
  signal asgn_PC_load_inst_v0c1_EXE : std_logic;
  signal asgn_UA_MUX00_SEL_inst_v0c0_EXE : std_logic;
  signal asgn_UA_MUX00_SEL_inst_v0c1_EXE : std_logic;
  signal decoded_ADD : std_logic;
  signal decoded_SUB : std_logic;
  signal decoded_MUL : std_logic;
  signal decoded_DIV : std_logic;
  signal decoded_DIVU : std_logic;
  signal decoded_MOD : std_logic;
  signal decoded_MODU : std_logic;
  signal decoded_AND : std_logic;
  signal decoded_NAND : std_logic;
  signal decoded_OR : std_logic;
  signal decoded_NOR : std_logic;
  signal decoded_XOR : std_logic;
  signal decoded_LLS : std_logic;
  signal decoded_LRS : std_logic;
  signal decoded_ARS : std_logic;
  signal decoded_ELT : std_logic;
  signal decoded_ELTU : std_logic;
  signal decoded_EEQ : std_logic;
  signal decoded_ENEQ : std_logic;
  signal decoded_ADDI : std_logic;
  signal decoded_SUBI : std_logic;
  signal decoded_ANDI : std_logic;
  signal decoded_ORI : std_logic;
  signal decoded_XORI : std_logic;
  signal decoded_LLSI : std_logic;
  signal decoded_LRSI : std_logic;
  signal decoded_ARSI : std_logic;
  signal decoded_LSOI : std_logic;
  signal decoded_LB : std_logic;
  signal decoded_LH : std_logic;
  signal decoded_LW : std_logic;
  signal decoded_SB : std_logic;
  signal decoded_SH : std_logic;
  signal decoded_SW : std_logic;
  signal decoded_BRZ : std_logic;
  signal decoded_BRNZ : std_logic;
  signal decoded_JP : std_logic;
  signal decoded_JPL : std_logic;
  signal decoded_TRAP : std_logic;
  signal decoded_JPR : std_logic;
  signal decoded_JPRL : std_logic;
  signal decoded_NOP : std_logic;
  signal decoded_RETI : std_logic;
  signal decoded_EXBW : std_logic;
  signal decoded_EXHW : std_logic;
  signal decout_ALU_mode : std_logic_vector(4 downto 0);
  signal decout_ALU_cin : std_logic;
  signal decout_GPR_flag_enb : std_logic;
  signal decout_FWU0_fw1 : std_logic;
  signal decout_FWU1_fw1 : std_logic;
  signal decout_GPR_w_enb0 : std_logic;
  signal decout_FWU0_fw2 : std_logic;
  signal decout_FWU1_fw2 : std_logic;
  signal decout_MUL_mode : std_logic;
  signal decout_DIV_mode : std_logic;
  signal decout_SFTvar_mode : std_logic_vector(1 downto 0);
  signal decout_EXT16TO32_mode : std_logic;
  signal decout_DMAU_rw_out : std_logic;
  signal decout_DMAU_mode_out : std_logic_vector(1 downto 0);
  signal decout_DMAU_ext_out : std_logic;
  signal decout_PC_load : std_logic;
  signal decout_EXT26TO32_mode : std_logic;
  signal decout_TRAP_HAND_REG_enb : std_logic;
  signal decout_GPR_status_enb : std_logic;
  signal decout_EXT8TO32_mode : std_logic;
  signal decout_EXT16TO32A_mode : std_logic;
  signal decout_UA_MUX00_SEL : std_logic;
  signal decout_UA_MUX02_SEL : std_logic_vector(1 downto 0);
  signal decout_UA_MUX03_SEL : std_logic_vector(1 downto 0);
  signal decout_UA_MUX04_SEL : std_logic;
  signal decout_UA_MUX05_SEL : std_logic_vector(3 downto 0);
  signal decout_UA_MUX06_SEL : std_logic;
  signal decout_UA_MUX07_SEL : std_logic_vector(3 downto 0);
  signal decout_UA_MUX08_SEL : std_logic_vector(2 downto 0);
  signal decout_UA_MUX09_SEL : std_logic;
  signal decout_UA_MUX10_SEL : std_logic_vector(1 downto 0);
  signal decout_UA_MUX11_SEL : std_logic;
  signal decout_UA_MUX12_SEL : std_logic_vector(1 downto 0);
  signal decout_UA_MUX13_SEL : std_logic_vector(3 downto 0);
  signal decout_UA_MUX14_SEL : std_logic;
  signal decout_UA_MUX15_SEL : std_logic_vector(3 downto 0);
  signal decout_UA_MUX16_SEL : std_logic;
  signal decout_UA_MUX17_SEL : std_logic;
  signal decout_UA_MUX18_SEL : std_logic_vector(1 downto 0);
  signal decout_UA_MUX19_SEL : std_logic;
  signal decout_UA_MUX20_SEL : std_logic_vector(1 downto 0);
  signal decout_UA_MUX21_SEL : std_logic;
  signal decout_UA_MUX22_SEL : std_logic_vector(1 downto 0);
  signal decout_UA_MUX23_SEL : std_logic;
  signal decout_UA_MUX24_SEL : std_logic_vector(3 downto 0);
  signal decout_UA_MUX25_SEL : std_logic_vector(2 downto 0);
  signal decout_UA_MUX26_SEL : std_logic;
  signal decout_ctrl_word_ID : std_logic_vector(89 downto 0);
  signal decout_ctrl_word_EXE : std_logic_vector(63 downto 0);
  signal decout_ctrl_word_in_EXE : std_logic_vector(63 downto 0);
  signal decout_ctrl_word_WB : std_logic_vector(13 downto 0);
  signal decout_ctrl_word_in_WB : std_logic_vector(13 downto 0);
  signal resctrl_IR_enb_inst : std_logic;
  signal resctrl_PC_hold_inst : std_logic;
  signal resctrl_DUMMY_STREG_enb_inst : std_logic;
  signal resctrl_ALU_mode_inst : std_logic_vector(4 downto 0);
  signal resctrl_ALU_cin_inst : std_logic;
  signal resctrl_GPR_flag_enb_inst : std_logic;
  signal resctrl_FWU0_fw1_inst : std_logic;
  signal resctrl_FWU1_fw1_inst : std_logic;
  signal resctrl_GPR_w_enb0_inst : std_logic;
  signal resctrl_FWU0_fw2_inst : std_logic;
  signal resctrl_FWU1_fw2_inst : std_logic;
  signal resctrl_MUL_mode_inst : std_logic;
  signal resctrl_DIV_mode_inst : std_logic;
  signal resctrl_SFTvar_mode_inst : std_logic_vector(1 downto 0);
  signal resctrl_EXT16TO32_mode_inst : std_logic;
  signal resctrl_DMAU_rw_out_inst : std_logic;
  signal resctrl_DMAU_mode_out_inst : std_logic_vector(1 downto 0);
  signal resctrl_DMAU_ext_out_inst : std_logic;
  signal resctrl_PC_load_inst : std_logic;
  signal resctrl_EXT26TO32_mode_inst : std_logic;
  signal resctrl_TRAP_HAND_REG_enb_inst : std_logic;
  signal resctrl_GPR_status_enb_inst : std_logic;
  signal resctrl_EXT8TO32_mode_inst : std_logic;
  signal resctrl_EXT16TO32A_mode_inst : std_logic;
  signal resctrl_UA_MUX00_SEL_inst : std_logic;
  signal resctrl_UA_MUX02_SEL_inst : std_logic_vector(1 downto 0);
  signal resctrl_UA_MUX03_SEL_inst : std_logic_vector(1 downto 0);
  signal resctrl_UA_MUX04_SEL_inst : std_logic;
  signal resctrl_UA_MUX05_SEL_inst : std_logic_vector(3 downto 0);
  signal resctrl_UA_MUX06_SEL_inst : std_logic;
  signal resctrl_UA_MUX07_SEL_inst : std_logic_vector(3 downto 0);
  signal resctrl_UA_MUX08_SEL_inst : std_logic_vector(2 downto 0);
  signal resctrl_UA_MUX09_SEL_inst : std_logic;
  signal resctrl_UA_MUX10_SEL_inst : std_logic_vector(1 downto 0);
  signal resctrl_UA_MUX11_SEL_inst : std_logic;
  signal resctrl_UA_MUX12_SEL_inst : std_logic_vector(1 downto 0);
  signal resctrl_UA_MUX13_SEL_inst : std_logic_vector(3 downto 0);
  signal resctrl_UA_MUX14_SEL_inst : std_logic;
  signal resctrl_UA_MUX15_SEL_inst : std_logic_vector(3 downto 0);
  signal resctrl_UA_MUX16_SEL_inst : std_logic;
  signal resctrl_UA_MUX17_SEL_inst : std_logic;
  signal resctrl_UA_MUX18_SEL_inst : std_logic_vector(1 downto 0);
  signal resctrl_UA_MUX19_SEL_inst : std_logic;
  signal resctrl_UA_MUX20_SEL_inst : std_logic_vector(1 downto 0);
  signal resctrl_UA_MUX21_SEL_inst : std_logic;
  signal resctrl_UA_MUX22_SEL_inst : std_logic_vector(1 downto 0);
  signal resctrl_UA_MUX23_SEL_inst : std_logic;
  signal resctrl_UA_MUX24_SEL_inst : std_logic_vector(3 downto 0);
  signal resctrl_UA_MUX25_SEL_inst : std_logic_vector(2 downto 0);
  signal resctrl_UA_MUX26_SEL_inst : std_logic;
  signal resctrl_mc_MUL_start_inst : std_logic;
  signal resctrl_mc_MUL_clear_inst : std_logic;
  signal resctrl_mc_DIV_start_inst : std_logic;
  signal resctrl_mc_DIV_clear_inst : std_logic;
  signal resctrl_mc_DMAU_req_out_inst : std_logic;
  signal resctrl_mc_DMAU_cancel_out_inst : std_logic;
  signal resctrl_EXTCATCH_OUT_wmode_intr : std_logic;
  signal resctrl_GPR_w_enb0_intr : std_logic;
  signal resctrl_GPR_status_enb_intr : std_logic;
  signal resctrl_PC_load_intr : std_logic;
  signal resctrl_GPR_reset_intr : std_logic;
  signal resctrl_IR_reset_intr : std_logic;
  signal resctrl_DIV_reset_intr : std_logic;
  signal resctrl_MUL_reset_intr : std_logic;
  signal resctrl_TRAP_HAND_REG_reset_intr : std_logic;
  signal resctrl_ALU_mode_intr : std_logic_vector(4 downto 0);
  signal resctrl_ALU_cin_intr : std_logic;
  signal resctrl_UA_MUX01_SEL_intr : std_logic_vector(1 downto 0);

begin
  UA_PROCFSM : rtg_proc_fsm
    port map (
      CLK => CLK, 
      RST => RST, 
      INTR_REQ => intr_request, 
      INTR_DETECT => intr_detected, 
      INTR_HANDLING => interrupt_handling, 
      INTR_PENDING => intr_pending, 
      INTR_CANCEL => intr_cancel, 
      FETCH_ENB => fetch_enb
    );

  UA_VALID_ID : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_ID, 
      DIN => advance_stage_IF, 
      DOUT => valid_stage_ID
    );

  UA_VALID_EXE : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_EXE, 
      DIN => advance_stage_ID, 
      DOUT => valid_stage_EXE
    );

  UA_VALID_WB : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_WB, 
      DIN => advance_stage_EXE, 
      DOUT => valid_stage_WB
    );

  UA_PREV_STALL_IF : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => const_bit1, 
      DIN => do_stall_IF, 
      DOUT => prev_do_stall_IF
    );

  UA_FIRST_ID : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => const_bit1, 
      DIN => advance_stage_IF, 
      DOUT => first_cycle_ID
    );

  UA_FIRST_EXE : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => const_bit1, 
      DIN => advance_stage_ID, 
      DOUT => first_cycle_EXE
    );

  UA_FIRST_WB : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => const_bit1, 
      DIN => advance_stage_EXE, 
      DOUT => first_cycle_WB
    );

  UA_INTRPIPE_CODE_ID : rtg_register_w2
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_ID, 
      DIN => intrpipe_code_in_ID, 
      DOUT => intrpipe_code_ID
    );

  UA_INTRPIPE_CODE_EXE : rtg_register_w2
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_EXE, 
      DIN => intrpipe_code_in_EXE, 
      DOUT => intrpipe_code_EXE
    );

  UA_INTRPIPE_CODE_WB : rtg_register_w2
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_WB, 
      DIN => intrpipe_code_in_WB, 
      DOUT => intrpipe_code_WB
    );

  UA_INTRPIPE_CODE_LAST : rtg_register_w2
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => intr_handling_x, 
      DIN => intrpipe_code_in_LAST, 
      DOUT => intrpipe_code_LAST
    );

  UA_INTRPIPE_REQ_ID : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_ID, 
      DIN => intrpipe_req_in_ID, 
      DOUT => intrpipe_req_ID
    );

  UA_INTRPIPE_REQ_EXE : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_EXE, 
      DIN => intrpipe_req_in_EXE, 
      DOUT => intrpipe_req_EXE
    );

  UA_INTRPIPE_REQ_WB : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_WB, 
      DIN => intrpipe_req_in_WB, 
      DOUT => intrpipe_req_WB
    );

  UA_INTRPIPE_SAVEDPC_ID : rtg_register_w32
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_ID, 
      DIN => intrpipe_saved_pc_in_ID, 
      DOUT => intrpipe_saved_pc_ID
    );

  UA_INTRPIPE_SAVEDPC_EXE : rtg_register_w32
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_EXE, 
      DIN => intrpipe_saved_pc_in_EXE, 
      DOUT => intrpipe_saved_pc_EXE
    );

  UA_INTRPIPE_SAVEDPC_WB : rtg_register_w32
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_WB, 
      DIN => intrpipe_saved_pc_in_WB, 
      DOUT => intrpipe_saved_pc_WB
    );

  UA_INTRPIPE_SAVEDPC_LAST : rtg_register_w32
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => intr_handling_x, 
      DIN => intrpipe_saved_pc_in_LAST, 
      DOUT => intrpipe_saved_pc_LAST
    );

  UA_INTRPIPE_DSOFFSET_ID : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_ID, 
      DIN => intrpipe_ds_offset_in_ID, 
      DOUT => intrpipe_ds_offset_ID
    );

  UA_INTRPIPE_DSOFFSET_EXE : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_EXE, 
      DIN => intrpipe_ds_offset_in_EXE, 
      DOUT => intrpipe_ds_offset_EXE
    );

  UA_INTRPIPE_DSOFFSET_WB : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_WB, 
      DIN => intrpipe_ds_offset_in_WB, 
      DOUT => intrpipe_ds_offset_WB
    );

  UA_INTRPIPE_DSOFFSET_LAST : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => intr_handling_x, 
      DIN => intrpipe_ds_offset_in_LAST, 
      DOUT => intrpipe_ds_offset_LAST
    );

  UA_BRANCH_HISTORY_ID : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_ID, 
      DIN => branch_history_in_ID, 
      DOUT => branch_history_ID
    );

  UA_BRANCH_HISTORY_EXE : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_EXE, 
      DIN => branch_history_in_EXE, 
      DOUT => branch_history_EXE
    );

  UA_BRANCH_HISTORY_WB : rtg_register_w1
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_WB, 
      DIN => branch_history_in_WB, 
      DOUT => branch_history_WB
    );

  UA_CW_EXE : rtg_register_w64
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_EXE, 
      DIN => decout_ctrl_word_in_EXE, 
      DOUT => decout_ctrl_word_EXE
    );

  UA_CW_WB : rtg_register_w14
    port map (
      RST => RST, 
      CLK => CLK, 
      ENB => pipereg_enb_WB, 
      DIN => decout_ctrl_word_in_WB, 
      DOUT => decout_ctrl_word_WB
    );

  -- always-true/false signal
  const_bit1 <= '1';
  const_bit0 <= '0';

  -- pipeline control logic
  intr_nreq_IF <= intr_req_IF and not intr_req_ID and not intr_req_EXE
  	and not intr_req_WB;
  intr_nreq_ID <= intr_req_ID and not intr_req_EXE and not intr_req_WB;
  intr_nreq_EXE <= intr_req_EXE and not intr_req_WB;
  intr_nreq_WB <= intr_req_WB;

  stall_nreq_IF <= stall_req_IF and not stall_req_ID and not
  	stall_req_EXE and not stall_req_WB;
  stall_nreq_ID <= stall_req_ID and not stall_req_EXE and not
  	stall_req_WB;
  stall_nreq_EXE <= stall_req_EXE and not stall_req_WB;
  stall_nreq_WB <= stall_req_WB;

  branch_nreq_IF <= branch_req_IF and not branch_req_ID and not
  	branch_req_EXE and not branch_req_WB;
  branch_nreq_ID <= branch_req_ID and not branch_req_EXE and not
  	branch_req_WB;
  branch_nreq_EXE <= branch_req_EXE and not branch_req_WB;
  branch_nreq_WB <= branch_req_WB;

  intr_acc_IF <= intr_nreq_IF and not stall_nreq_IF and not
  	stall_nreq_ID and not stall_nreq_EXE and not stall_nreq_WB and not
  	branch_nreq_ID and not branch_nreq_EXE and not branch_nreq_WB;
  intr_acc_ID <= intr_nreq_ID and not stall_nreq_ID and not
  	stall_nreq_EXE and not stall_nreq_WB and not branch_nreq_EXE and not
  	branch_nreq_WB;
  intr_acc_EXE <= intr_nreq_EXE and not stall_nreq_EXE and not
  	stall_nreq_WB and not branch_nreq_WB;
  intr_acc_WB <= intr_nreq_WB and not stall_nreq_WB;

  stall_acc_IF <= stall_nreq_IF and not intr_nreq_ID and not
  	intr_nreq_EXE and not intr_nreq_WB and not branch_nreq_ID and not
  	branch_nreq_EXE and not branch_nreq_WB;
  stall_acc_ID <= stall_nreq_ID and not intr_nreq_EXE and not
  	intr_nreq_WB and not branch_nreq_EXE and not branch_nreq_WB;
  stall_acc_EXE <= stall_nreq_EXE and not intr_nreq_WB and not
  	branch_nreq_WB;
  stall_acc_WB <= stall_nreq_WB;

  branch_acc_IF <= branch_nreq_IF and not intr_nreq_IF and not
  	intr_nreq_ID and not intr_nreq_EXE and not intr_nreq_WB and not
  	stall_nreq_IF and not stall_nreq_ID and not stall_nreq_EXE and not
  	stall_nreq_WB;
  branch_acc_ID <= branch_nreq_ID and not intr_nreq_ID and not
  	intr_nreq_EXE and not intr_nreq_WB and not stall_nreq_ID and not
  	stall_nreq_EXE and not stall_nreq_WB;
  branch_acc_EXE <= branch_nreq_EXE and not intr_nreq_EXE and not
  	intr_nreq_WB and not stall_nreq_EXE and not stall_nreq_WB;
  branch_acc_WB <= branch_nreq_WB and not intr_nreq_WB and not
  	stall_nreq_WB;

  do_stall_IF <= stall_acc_IF or stall_acc_ID or stall_acc_EXE or
  	stall_acc_WB;
  do_stall_ID <= stall_acc_ID or stall_acc_EXE or stall_acc_WB;
  do_stall_EXE <= stall_acc_EXE or stall_acc_WB;
  do_stall_WB <= stall_acc_WB;

  do_flush_IF <= intr_acc_IF or intr_acc_ID or intr_acc_EXE or
  	intr_acc_WB or branch_acc_ID or branch_acc_EXE or branch_acc_WB;
  do_flush_ID <= intr_acc_ID or intr_acc_EXE or intr_acc_WB or
  	branch_acc_EXE or branch_acc_WB;
  do_flush_EXE <= intr_acc_EXE or intr_acc_WB or branch_acc_WB;
  do_flush_WB <= intr_acc_WB;

  pipereg_enb_ID <= not do_stall_ID or do_flush_ID;
  pipereg_enb_EXE <= not do_stall_EXE or do_flush_EXE;
  pipereg_enb_WB <= not do_stall_WB or do_flush_WB;

  valid_stage_IF <= fetch_enb;

  first_cycle_IF <= valid_stage_IF and not prev_do_stall_IF;

  -- reset interrupt detection logic
  intr_RESET_detected <= INTREQ_RESET;

  -- external interrupt detection logic
  intr_EXTINT_detected <= INTREQ_EXTINT_IN and
  	DATAIN_DUMMY_STREG_DATA_OUT(8) and valid_stage_IF;

  -- internal interrupt detection logic
  intr_TRAPINT_detected <= valid_stage_EXE and
  	cause_TRAPINT_inst_at_EXE_00 and DATAIN_DUMMY_STREG_DATA_OUT(9);
  internal_intr_req_IF <= '0';
  internal_intr_req_ID <= '0';
  internal_intr_req_EXE <= intr_TRAPINT_detected;
  internal_intr_req_WB <= '0';
  intr_code_detected_IF <= "00";
  intr_code_detected_ID <= "00";
  intr_code_detected_EXE <= 
	INTR_TRAPINT when intr_TRAPINT_detected = '1' else 
	"00";
  intr_code_detected_WB <= "00";

  -- interrupt request logic
  intr_req_IF <= internal_intr_req_IF or intr_EXTINT_detected;
  intr_req_ID <= internal_intr_req_ID;
  intr_req_EXE <= internal_intr_req_EXE;
  intr_req_WB <= internal_intr_req_WB or intr_RESET_detected;

  -- interrupt pipeline logic
  intrpipe_req_IF <= const_bit0;
  any_intr_req_IF <= intrpipe_req_IF or intr_acc_IF;
  any_intr_req_ID <= intrpipe_req_ID or intr_acc_ID;
  any_intr_req_EXE <= intrpipe_req_EXE or intr_acc_EXE;
  any_intr_req_WB <= intrpipe_req_WB or intr_acc_WB;
  branch_history_IF <= const_bit0;
  any_branch_IF <= branch_history_IF or branch_acc_IF;
  any_branch_ID <= branch_history_ID or branch_acc_ID;
  any_branch_EXE <= branch_history_EXE or branch_acc_EXE;
  any_branch_WB <= branch_history_WB or branch_acc_WB;
  intr_req_inside_DBS_IF <= const_bit0;
  intr_req_inside_DBS_ID <= const_bit0;
  intr_req_inside_DBS_EXE <= const_bit0;
  intr_req_inside_DBS_WB <= const_bit0;
  intr_propagation_cond_tmp_IF <= not any_branch_IF or not
  	intr_req_inside_DBS_IF;
  intr_propagation_cond_tmp_ID <= not any_branch_ID or not
  	intr_req_inside_DBS_ID;
  intr_propagation_cond_tmp_EXE <= not any_branch_EXE or not
  	intr_req_inside_DBS_EXE;
  intr_propagation_cond_tmp_WB <= not any_branch_WB or not
  	intr_req_inside_DBS_WB;
  intrpipe_code_in_ID <= 
	intr_code_detected_IF when intr_acc_IF = '1' and internal_intr_req_IF
  	= '1' else
	INTR_EXTINT when intr_acc_IF = '1' and intr_EXTINT_detected = '1' else
	"00";
  intrpipe_code_in_EXE <= 
	intr_code_detected_ID when intr_acc_ID = '1' and internal_intr_req_ID
  	= '1' else
	intrpipe_code_ID;
  intrpipe_code_in_WB <= 
	intr_code_detected_EXE when intr_acc_EXE = '1' and
  	internal_intr_req_EXE = '1' else
	intrpipe_code_EXE;
  intrpipe_code_in_LAST <= 
	INTR_RESET when intr_RESET_detected = '1' else 
	intr_code_detected_WB when intr_acc_WB = '1' and internal_intr_req_WB
  	= '1' else
	intrpipe_code_WB;
  intrpipe_req_in_ID <= intr_acc_IF or (any_branch_IF and
  	intr_req_inside_DBS_IF);
  intrpipe_req_in_EXE <= intr_acc_ID or (intrpipe_req_ID and not
  	do_stall_ID and not do_flush_ID) or (any_branch_ID and
  	intr_req_inside_DBS_ID);
  intrpipe_req_in_WB <= intr_acc_EXE or (intrpipe_req_EXE and not
  	do_stall_EXE and not do_flush_EXE) or (any_branch_EXE and
  	intr_req_inside_DBS_EXE);
  intr_request <= intr_acc_WB or (intrpipe_req_WB and not do_stall_WB
  	and not do_flush_WB) or (any_branch_WB and intr_req_inside_DBS_WB);
  intrpipe_saved_pc_in_ID <= DATAIN_PC_DATA_OUT;
  intrpipe_saved_pc_in_EXE <= intrpipe_saved_pc_ID;
  intrpipe_saved_pc_in_WB <= intrpipe_saved_pc_EXE;
  intrpipe_saved_pc_in_LAST <= intrpipe_saved_pc_WB;
  DATAOUT_SAVED_PC <= intrpipe_saved_pc_LAST;
  intrpipe_ds_offset_in_ID <= '0';
  intrpipe_ds_offset_in_EXE <= intrpipe_ds_offset_ID;
  intrpipe_ds_offset_in_WB <= intrpipe_ds_offset_EXE;
  intrpipe_ds_offset_in_LAST <= intrpipe_ds_offset_WB;
  DATAOUT_DS_OFFSET <= intrpipe_ds_offset_LAST;
  branch_history_in_ID <= any_branch_IF;
  branch_history_in_EXE <= any_branch_ID;
  branch_history_in_WB <= any_branch_EXE;
  intr_handling_x <= not interrupt_handling;
  intr_code <= intrpipe_code_LAST;
  intr_detected <= intr_RESET_detected or (intr_acc_IF and not
  	do_stall_IF) or (intr_acc_ID and not do_stall_ID) or (intr_acc_EXE and
  	not do_stall_EXE) or (intr_acc_WB and not do_stall_WB);
  intr_cancel <= ((branch_acc_IF and not intr_req_inside_DBS_IF) or
  	(branch_acc_ID and not intr_req_inside_DBS_ID) or (branch_acc_EXE and
  	not intr_req_inside_DBS_EXE) or (branch_acc_WB and not
  	intr_req_inside_DBS_WB)) and intr_pending;

  advance_stage_IF <= valid_stage_IF and not do_stall_IF and not
  	do_flush_IF and intr_propagation_cond_tmp_IF;
  advance_stage_ID <= valid_stage_ID and not do_stall_ID and not
  	do_flush_ID and intr_propagation_cond_tmp_ID;
  advance_stage_EXE <= valid_stage_EXE and not do_stall_EXE and not
  	do_flush_EXE and intr_propagation_cond_tmp_EXE;
  advance_stage_WB <= valid_stage_WB and not do_stall_WB and not
  	do_flush_WB and intr_propagation_cond_tmp_WB;

  -- branch detection logic
  branch_req_IF <= '0';
  branch_req_ID <= '0';
  branch_req_EXE <= valid_stage_EXE and ((branch_inst_at_EXE_0 and
  	CTRLIN_CMPEQ_02_EXE) or (branch_inst_at_EXE_1 and CTRLIN_CMPNEQ_00_EXE)
  	or branch_inst_at_EXE_2);
  branch_req_WB <= '0';

  -- multi-cycle operation detection logic
  multcyc_MUL_start_ready_EXE <= valid_stage_EXE and
  	multcyc_MUL_start_c0_inst_EXE;
  multcyc_MUL_start_stall_EXE <= multcyc_MUL_start_ready_EXE and not
  	CTRLIN_MUL_FIN;
  multcyc_DIV_start_ready_EXE <= valid_stage_EXE and
  	multcyc_DIV_start_c0_inst_EXE;
  multcyc_DIV_start_stall_EXE <= multcyc_DIV_start_ready_EXE and not
  	CTRLIN_DIV_FIN;
  multcyc_DMAU_req_out_ready_WB <= valid_stage_WB and
  	multcyc_DMAU_req_out_c0_inst_WB;
  multcyc_DMAU_req_out_stall_WB <= multcyc_DMAU_req_out_ready_WB and not
  	CTRLIN_DMAU_ACK_IN;

  -- instruction decode logic
  decoded_ADD <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "000" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000000" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_SUB <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "000" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000001" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_MUL <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "000" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000010" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_DIV <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "000" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000011" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_DIVU <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "000" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000101" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_MOD <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "000" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000100" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_MODU <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "000" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000110" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_AND <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "001" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000000" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_NAND <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "001" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000011" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_OR <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "001" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000001" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_NOR <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "001" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000100" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_XOR <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "001" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000010" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_LLS <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "010" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000000" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_LRS <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "010" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000001" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_ARS <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "010" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000010" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_ELT <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "011" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000000" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_ELTU <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "011" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000001" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_EEQ <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "011" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000010" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_ENEQ <= 
	'1' when DATAIN_IR_DATA_OUT(16 downto 14) = "011" and
  	DATAIN_IR_DATA_OUT(13 downto 6) = "00000011" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000001" else
	'0';
  decoded_ADDI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "100000" else 
	'0';
  decoded_SUBI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "100001" else 
	'0';
  decoded_ANDI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "100010" else 
	'0';
  decoded_ORI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "100011" else 
	'0';
  decoded_XORI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "100100" else 
	'0';
  decoded_LLSI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "100101" else 
	'0';
  decoded_LRSI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "100110" else 
	'0';
  decoded_ARSI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "100111" else 
	'0';
  decoded_LSOI <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "101000" else 
	'0';
  decoded_LB <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "000010" else 
	'0';
  decoded_LH <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "000011" else 
	'0';
  decoded_LW <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "000100" else 
	'0';
  decoded_SB <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "000101" else 
	'0';
  decoded_SH <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "000110" else 
	'0';
  decoded_SW <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "000111" else 
	'0';
  decoded_BRZ <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "001001" else 
	'0';
  decoded_BRNZ <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "001010" else 
	'0';
  decoded_JP <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "001011" else 
	'0';
  decoded_JPL <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "001100" else 
	'0';
  decoded_TRAP <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "001101" else 
	'0';
  decoded_JPR <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "001110" else 
	'0';
  decoded_JPRL <= 
	'1' when DATAIN_IR_DATA_OUT(5 downto 0) = "001111" else 
	'0';
  decoded_NOP <= 
	'1' when DATAIN_IR_DATA_OUT(10 downto 6) = "00000" and
  	DATAIN_IR_DATA_OUT(5 downto 0) = "000000" else
	'0';
  decoded_RETI <= 
	'1' when DATAIN_IR_DATA_OUT(10 downto 6) = "00001" and
  	DATAIN_IR_DATA_OUT(5 downto 0) = "000000" else
	'0';
  decoded_EXBW <= 
	'1' when DATAIN_IR_DATA_OUT(21 downto 11) = "00000000000" and
  	DATAIN_IR_DATA_OUT(10 downto 6) = "00010" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000000" else
	'0';
  decoded_EXHW <= 
	'1' when DATAIN_IR_DATA_OUT(21 downto 11) = "00000000001" and
  	DATAIN_IR_DATA_OUT(10 downto 6) = "00010" and DATAIN_IR_DATA_OUT(5
  	downto 0) = "000000" else
	'0';

  -- resource conflict detection logic



  -- stall detection logic
  stall_req_IF <= '0';
  stall_req_ID <= '0';
  stall_req_EXE <= multcyc_MUL_start_stall_EXE or
  	multcyc_DIV_start_stall_EXE;
  stall_req_WB <= multcyc_DMAU_req_out_stall_WB;

  -- decoder outputs
  -- EXT16TO32.mode:
  decout_ctrl_word_ID(89 downto 89) <= 
	"0" when decoded_ANDI = '1' or decoded_LSOI = '1' or decoded_ORI = '1'
  	or decoded_XORI = '1' else
	"1" when decoded_ADDI = '1' or decoded_BRNZ = '1' or decoded_BRZ = '1'
  	or decoded_LB = '1' or decoded_LH = '1' or decoded_LW = '1' or
  	decoded_SB = '1' or decoded_SH = '1' or decoded_SUBI = '1' or
  	decoded_SW = '1' else
	"0";
  -- EXT26TO32.mode:
  decout_ctrl_word_ID(88 downto 88) <= 
	"0" when decoded_TRAP = '1' else 
	"1" when decoded_JP = '1' or decoded_JPL = '1' else 
	"0";
  -- TRAP_HAND_REG.enb:
  decout_ctrl_word_ID(87 downto 87) <= 
	"1" when decoded_TRAP = '1' else 
	"0";
  -- UA_MUX02.SEL:
  decout_ctrl_word_ID(86 downto 85) <= 
	"10" when decoded_BRNZ = '1' or decoded_BRZ = '1' or decoded_JP = '1'
  	or decoded_JPL = '1' else
	"01" when decoded_LSOI = '1' else 
	"00" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_EEQ = '1' or decoded_ELT = '1' or
  	decoded_ELTU = '1' or decoded_ENEQ = '1' or decoded_LB = '1' or
  	decoded_LH = '1' or decoded_LW = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_ORI = '1' or
  	decoded_SB = '1' or decoded_SH = '1' or decoded_SUB = '1' or
  	decoded_SUBI = '1' or decoded_SW = '1' or decoded_XOR = '1' or
  	decoded_XORI = '1' else
	"00";
  -- UA_MUX03.SEL:
  decout_ctrl_word_ID(84 downto 83) <= 
	"10" when decoded_JP = '1' or decoded_JPL = '1' else 
	"01" when decoded_ADDI = '1' or decoded_ANDI = '1' or decoded_BRNZ =
  	'1' or decoded_BRZ = '1' or decoded_LB = '1' or decoded_LH = '1' or
  	decoded_LSOI = '1' or decoded_LW = '1' or decoded_ORI = '1' or
  	decoded_SB = '1' or decoded_SH = '1' or decoded_SUBI = '1' or
  	decoded_SW = '1' or decoded_XORI = '1' else
	"00" when decoded_ADD = '1' or decoded_AND = '1' or decoded_EEQ = '1'
  	or decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_SUB = '1' or decoded_XOR = '1' else
	"00";
  -- UA_MUX04.SEL:
  decout_ctrl_word_ID(82 downto 82) <= 
	"1" when decoded_ARSI = '1' or decoded_LLSI = '1' or decoded_LRSI =
  	'1' else
	"0" when decoded_ARS = '1' or decoded_LLS = '1' or decoded_LRS = '1'
  	else
	"0";
  -- UA_MUX08.SEL:
  decout_ctrl_word_ID(81 downto 79) <= 
	"100" when decoded_EXBW = '1' or decoded_EXHW = '1' else 
	"011" when decoded_RETI = '1' else 
	"010" when decoded_JPR = '1' or decoded_JPRL = '1' or decoded_SB = '1'
  	or decoded_SH = '1' or decoded_SW = '1' else
	"001" when decoded_ADDI = '1' or decoded_ANDI = '1' or decoded_ARSI =
  	'1' or decoded_BRNZ = '1' or decoded_BRZ = '1' or decoded_LB = '1' or
  	decoded_LH = '1' or decoded_LLSI = '1' or decoded_LRSI = '1' or
  	decoded_LSOI = '1' or decoded_LW = '1' or decoded_ORI = '1' or
  	decoded_SUBI = '1' or decoded_XORI = '1' else
	"000" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"000";
  -- UA_MUX10.SEL:
  decout_ctrl_word_ID(78 downto 77) <= 
	"10" when decoded_EXBW = '1' or decoded_EXHW = '1' else 
	"01" when decoded_ADDI = '1' or decoded_ANDI = '1' or decoded_ARSI =
  	'1' or decoded_LLSI = '1' or decoded_LRSI = '1' or decoded_LSOI = '1'
  	or decoded_ORI = '1' or decoded_SUBI = '1' or decoded_XORI = '1' else
	"00" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"00";
  -- UA_MUX12.SEL:
  decout_ctrl_word_ID(76 downto 75) <= 
	"10" when decoded_EXBW = '1' or decoded_EXHW = '1' else 
	"01" when decoded_ADDI = '1' or decoded_ANDI = '1' or decoded_ARSI =
  	'1' or decoded_LB = '1' or decoded_LH = '1' or decoded_LLSI = '1' or
  	decoded_LRSI = '1' or decoded_LSOI = '1' or decoded_LW = '1' or
  	decoded_ORI = '1' or decoded_SUBI = '1' or decoded_XORI = '1' else
	"00" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"00";
  -- UA_MUX16.SEL:
  decout_ctrl_word_ID(74 downto 74) <= 
	"1" when decoded_SB = '1' or decoded_SH = '1' or decoded_SW = '1' else
	"0" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"0";
  -- UA_MUX18.SEL:
  decout_ctrl_word_ID(73 downto 72) <= 
	"10" when decoded_EXBW = '1' or decoded_EXHW = '1' else 
	"01" when decoded_ADDI = '1' or decoded_ANDI = '1' or decoded_ARSI =
  	'1' or decoded_LLSI = '1' or decoded_LRSI = '1' or decoded_LSOI = '1'
  	or decoded_ORI = '1' or decoded_SUBI = '1' or decoded_XORI = '1' else
	"00" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"00";
  -- UA_MUX20.SEL:
  decout_ctrl_word_ID(71 downto 70) <= 
	"10" when decoded_EXBW = '1' or decoded_EXHW = '1' else 
	"01" when decoded_ADDI = '1' or decoded_ANDI = '1' or decoded_ARSI =
  	'1' or decoded_LB = '1' or decoded_LH = '1' or decoded_LLSI = '1' or
  	decoded_LRSI = '1' or decoded_LSOI = '1' or decoded_LW = '1' or
  	decoded_ORI = '1' or decoded_SUBI = '1' or decoded_XORI = '1' else
	"00" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"00";
  -- UA_MUX22.SEL:
  decout_ctrl_word_ID(69 downto 68) <= 
	"10" when decoded_EXBW = '1' or decoded_EXHW = '1' else 
	"01" when decoded_ADDI = '1' or decoded_ANDI = '1' or decoded_ARSI =
  	'1' or decoded_LB = '1' or decoded_LH = '1' or decoded_LLSI = '1' or
  	decoded_LRSI = '1' or decoded_LSOI = '1' or decoded_LW = '1' or
  	decoded_ORI = '1' or decoded_SUBI = '1' or decoded_XORI = '1' else
	"00" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"00";
  -- UA_MUX25.SEL:
  decout_ctrl_word_ID(67 downto 65) <= 
	"100" when decoded_EXBW = '1' or decoded_EXHW = '1' else 
	"011" when decoded_RETI = '1' else 
	"010" when decoded_JPR = '1' or decoded_JPRL = '1' or decoded_SB = '1'
  	or decoded_SH = '1' or decoded_SW = '1' else
	"001" when decoded_ADDI = '1' or decoded_ANDI = '1' or decoded_ARSI =
  	'1' or decoded_BRNZ = '1' or decoded_BRZ = '1' or decoded_LB = '1' or
  	decoded_LH = '1' or decoded_LLSI = '1' or decoded_LRSI = '1' or
  	decoded_LSOI = '1' or decoded_LW = '1' or decoded_ORI = '1' or
  	decoded_SUBI = '1' or decoded_XORI = '1' else
	"000" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"000";
  -- UA_MUX26.SEL:
  decout_ctrl_word_ID(64 downto 64) <= 
	"1" when decoded_SB = '1' or decoded_SH = '1' or decoded_SW = '1' else
	"0" when decoded_ADD = '1' or decoded_AND = '1' or decoded_ARS = '1'
  	or decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_LLS = '1' or decoded_LRS = '1' or decoded_MOD = '1' or
  	decoded_MODU = '1' or decoded_MUL = '1' or decoded_NAND = '1' or
  	decoded_NOR = '1' or decoded_OR = '1' or decoded_SUB = '1' or
  	decoded_XOR = '1' else
	"0";
  -- ALU.mode:
  decout_ctrl_word_ID(63 downto 59) <= 
	"10001" when decoded_XOR = '1' or decoded_XORI = '1' else 
	"11000" when decoded_NOR = '1' else 
	"10000" when decoded_LSOI = '1' or decoded_OR = '1' or decoded_ORI =
  	'1' else
	"11010" when decoded_NAND = '1' else 
	"10010" when decoded_AND = '1' or decoded_ANDI = '1' else 
	"01010" when decoded_EEQ = '1' or decoded_ELT = '1' or decoded_ELTU =
  	'1' or decoded_ENEQ = '1' or decoded_SUB = '1' or decoded_SUBI = '1'
  	else
	"01001" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_BRNZ =
  	'1' or decoded_BRZ = '1' or decoded_JP = '1' or decoded_JPL = '1' or
  	decoded_LB = '1' or decoded_LH = '1' or decoded_LW = '1' or decoded_SB
  	= '1' or decoded_SH = '1' or decoded_SW = '1' else
	"00000";
  -- ALU.cin:
  decout_ctrl_word_ID(58 downto 58) <= 
	"1" when decoded_EEQ = '1' or decoded_ELT = '1' or decoded_ELTU = '1'
  	or decoded_ENEQ = '1' or decoded_SUB = '1' or decoded_SUBI = '1' else
	"0" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_BRNZ = '1'
  	or decoded_BRZ = '1' or decoded_JP = '1' or decoded_JPL = '1' or
  	decoded_LB = '1' or decoded_LH = '1' or decoded_LW = '1' or decoded_SB
  	= '1' or decoded_SH = '1' or decoded_SW = '1' else
	"0";
  -- GPR.flag_enb:
  decout_ctrl_word_ID(57 downto 57) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_SUB = '1'
  	or decoded_SUBI = '1' else
	"0";
  -- FWU0.fw1:
  decout_ctrl_word_ID(56 downto 56) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_JPL = '1' or
  	decoded_JPRL = '1' or decoded_LLS = '1' or decoded_LLSI = '1' or
  	decoded_LRS = '1' or decoded_LRSI = '1' or decoded_LSOI = '1' or
  	decoded_MOD = '1' or decoded_MODU = '1' or decoded_MUL = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_ORI = '1' or decoded_SUB = '1' or decoded_SUBI = '1' or
  	decoded_XOR = '1' or decoded_XORI = '1' else
	"0";
  -- FWU1.fw1:
  decout_ctrl_word_ID(55 downto 55) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_JPL = '1' or
  	decoded_JPRL = '1' or decoded_LLS = '1' or decoded_LLSI = '1' or
  	decoded_LRS = '1' or decoded_LRSI = '1' or decoded_LSOI = '1' or
  	decoded_MOD = '1' or decoded_MODU = '1' or decoded_MUL = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_ORI = '1' or decoded_SUB = '1' or decoded_SUBI = '1' or
  	decoded_XOR = '1' or decoded_XORI = '1' else
	"0";
  -- MUL.mode:
  decout_ctrl_word_ID(54 downto 54) <= 
	"1" when decoded_MUL = '1' else 
	"0";
  -- DIV.mode:
  decout_ctrl_word_ID(53 downto 53) <= 
	"0" when decoded_DIVU = '1' or decoded_MODU = '1' else 
	"1" when decoded_DIV = '1' or decoded_MOD = '1' else 
	"0";
  -- SFTvar.mode:
  decout_ctrl_word_ID(52 downto 51) <= 
	"11" when decoded_ARS = '1' or decoded_ARSI = '1' else 
	"10" when decoded_LRS = '1' or decoded_LRSI = '1' else 
	"00" when decoded_LLS = '1' or decoded_LLSI = '1' else 
	"00";
  -- PC.load:
  decout_ctrl_word_ID(50 downto 50) <= 
	"1" when decoded_JP = '1' or decoded_JPL = '1' or decoded_JPR = '1' or
  	decoded_JPRL = '1' or decoded_RETI = '1' else
	"0";
  -- GPR.status_enb:
  decout_ctrl_word_ID(49 downto 49) <= 
	"1" when decoded_RETI = '1' else 
	"0";
  -- EXT8TO32.mode:
  decout_ctrl_word_ID(48 downto 48) <= 
	"1" when decoded_EXBW = '1' else 
	"0";
  -- EXT16TO32A.mode:
  decout_ctrl_word_ID(47 downto 47) <= 
	"1" when decoded_EXHW = '1' else 
	"0";
  -- UA_MUX00.SEL:
  decout_ctrl_word_ID(46 downto 46) <= 
	"1" when decoded_JPR = '1' or decoded_JPRL = '1' or decoded_RETI = '1'
  	else
	"0" when decoded_JP = '1' or decoded_JPL = '1' else 
	"0";
  -- UA_MUX05.SEL:
  decout_ctrl_word_ID(45 downto 42) <= 
	"1011" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"1010" when decoded_EXHW = '1' else 
	"1001" when decoded_EXBW = '1' else 
	"1000" when decoded_ENEQ = '1' else 
	"0111" when decoded_EEQ = '1' else 
	"0110" when decoded_ELTU = '1' else 
	"0101" when decoded_ELT = '1' else 
	"0100" when decoded_ARS = '1' or decoded_ARSI = '1' or decoded_LLS =
  	'1' or decoded_LLSI = '1' or decoded_LRS = '1' or decoded_LRSI = '1'
  	else
	"0011" when decoded_MOD = '1' or decoded_MODU = '1' else 
	"0010" when decoded_DIV = '1' or decoded_DIVU = '1' else 
	"0001" when decoded_MUL = '1' else 
	"0000" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND =
  	'1' or decoded_ANDI = '1' or decoded_LSOI = '1' or decoded_NAND = '1'
  	or decoded_NOR = '1' or decoded_OR = '1' or decoded_ORI = '1' or
  	decoded_SUB = '1' or decoded_SUBI = '1' or decoded_XOR = '1' or
  	decoded_XORI = '1' else
	"0000";
  -- UA_MUX07.SEL:
  decout_ctrl_word_ID(41 downto 38) <= 
	"1011" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"1010" when decoded_EXHW = '1' else 
	"1001" when decoded_EXBW = '1' else 
	"1000" when decoded_ENEQ = '1' else 
	"0111" when decoded_EEQ = '1' else 
	"0110" when decoded_ELTU = '1' else 
	"0101" when decoded_ELT = '1' else 
	"0100" when decoded_ARS = '1' or decoded_ARSI = '1' or decoded_LLS =
  	'1' or decoded_LLSI = '1' or decoded_LRS = '1' or decoded_LRSI = '1'
  	else
	"0011" when decoded_MOD = '1' or decoded_MODU = '1' else 
	"0010" when decoded_DIV = '1' or decoded_DIVU = '1' else 
	"0001" when decoded_MUL = '1' else 
	"0000" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND =
  	'1' or decoded_ANDI = '1' or decoded_LSOI = '1' or decoded_NAND = '1'
  	or decoded_NOR = '1' or decoded_OR = '1' or decoded_ORI = '1' or
  	decoded_SUB = '1' or decoded_SUBI = '1' or decoded_XOR = '1' or
  	decoded_XORI = '1' else
	"0000";
  -- UA_MUX09.SEL:
  decout_ctrl_word_ID(37 downto 37) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_LLS = '1' or
  	decoded_LLSI = '1' or decoded_LRS = '1' or decoded_LRSI = '1' or
  	decoded_LSOI = '1' or decoded_MOD = '1' or decoded_MODU = '1' or
  	decoded_MUL = '1' or decoded_NAND = '1' or decoded_NOR = '1' or
  	decoded_OR = '1' or decoded_ORI = '1' or decoded_SUB = '1' or
  	decoded_SUBI = '1' or decoded_XOR = '1' or decoded_XORI = '1' else
	"0" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"0";
  -- UA_MUX13.SEL:
  decout_ctrl_word_ID(36 downto 33) <= 
	"1011" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"1010" when decoded_EXHW = '1' else 
	"1001" when decoded_EXBW = '1' else 
	"1000" when decoded_ENEQ = '1' else 
	"0111" when decoded_EEQ = '1' else 
	"0110" when decoded_ELTU = '1' else 
	"0101" when decoded_ELT = '1' else 
	"0100" when decoded_ARS = '1' or decoded_ARSI = '1' or decoded_LLS =
  	'1' or decoded_LLSI = '1' or decoded_LRS = '1' or decoded_LRSI = '1'
  	else
	"0011" when decoded_MOD = '1' or decoded_MODU = '1' else 
	"0010" when decoded_DIV = '1' or decoded_DIVU = '1' else 
	"0001" when decoded_MUL = '1' else 
	"0000" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND =
  	'1' or decoded_ANDI = '1' or decoded_LSOI = '1' or decoded_NAND = '1'
  	or decoded_NOR = '1' or decoded_OR = '1' or decoded_ORI = '1' or
  	decoded_SUB = '1' or decoded_SUBI = '1' or decoded_XOR = '1' or
  	decoded_XORI = '1' else
	"0000";
  -- UA_MUX15.SEL:
  decout_ctrl_word_ID(32 downto 29) <= 
	"1011" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"1010" when decoded_EXHW = '1' else 
	"1001" when decoded_EXBW = '1' else 
	"1000" when decoded_ENEQ = '1' else 
	"0111" when decoded_EEQ = '1' else 
	"0110" when decoded_ELTU = '1' else 
	"0101" when decoded_ELT = '1' else 
	"0100" when decoded_ARS = '1' or decoded_ARSI = '1' or decoded_LLS =
  	'1' or decoded_LLSI = '1' or decoded_LRS = '1' or decoded_LRSI = '1'
  	else
	"0011" when decoded_MOD = '1' or decoded_MODU = '1' else 
	"0010" when decoded_DIV = '1' or decoded_DIVU = '1' else 
	"0001" when decoded_MUL = '1' else 
	"0000" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND =
  	'1' or decoded_ANDI = '1' or decoded_LSOI = '1' or decoded_NAND = '1'
  	or decoded_NOR = '1' or decoded_OR = '1' or decoded_ORI = '1' or
  	decoded_SUB = '1' or decoded_SUBI = '1' or decoded_XOR = '1' or
  	decoded_XORI = '1' else
	"0000";
  -- UA_MUX17.SEL:
  decout_ctrl_word_ID(28 downto 28) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_LLS = '1' or
  	decoded_LLSI = '1' or decoded_LRS = '1' or decoded_LRSI = '1' or
  	decoded_LSOI = '1' or decoded_MOD = '1' or decoded_MODU = '1' or
  	decoded_MUL = '1' or decoded_NAND = '1' or decoded_NOR = '1' or
  	decoded_OR = '1' or decoded_ORI = '1' or decoded_SUB = '1' or
  	decoded_SUBI = '1' or decoded_XOR = '1' or decoded_XORI = '1' else
	"0" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"0";
  -- UA_MUX24.SEL:
  decout_ctrl_word_ID(27 downto 24) <= 
	"1011" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"1010" when decoded_EXHW = '1' else 
	"1001" when decoded_EXBW = '1' else 
	"1000" when decoded_ENEQ = '1' else 
	"0111" when decoded_EEQ = '1' else 
	"0110" when decoded_ELTU = '1' else 
	"0101" when decoded_ELT = '1' else 
	"0100" when decoded_ARS = '1' or decoded_ARSI = '1' or decoded_LLS =
  	'1' or decoded_LLSI = '1' or decoded_LRS = '1' or decoded_LRSI = '1'
  	else
	"0011" when decoded_MOD = '1' or decoded_MODU = '1' else 
	"0010" when decoded_DIV = '1' or decoded_DIVU = '1' else 
	"0001" when decoded_MUL = '1' else 
	"0000" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND =
  	'1' or decoded_ANDI = '1' or decoded_LSOI = '1' or decoded_NAND = '1'
  	or decoded_NOR = '1' or decoded_OR = '1' or decoded_ORI = '1' or
  	decoded_SUB = '1' or decoded_SUBI = '1' or decoded_XOR = '1' or
  	decoded_XORI = '1' else
	"0000";
  decout_ctrl_word_ID(23) <= 
	'1' when decoded_TRAP = '1' else 
	'0';
  decout_ctrl_word_ID(22) <= 
	'1' when decoded_BRZ = '1' else 
	'0';
  decout_ctrl_word_ID(21) <= 
	'1' when decoded_BRNZ = '1' else 
	'0';
  decout_ctrl_word_ID(20) <= 
	'1' when decoded_JP = '1' or decoded_JPL = '1' or decoded_JPR = '1' or
  	decoded_JPRL = '1' or decoded_RETI = '1' else
	'0';
  decout_ctrl_word_ID(19) <= 
	'1' when decoded_MUL = '1' else 
	'0';
  decout_ctrl_word_ID(18) <= 
	'1' when decoded_DIV = '1' or decoded_DIVU = '1' or decoded_MOD = '1'
  	or decoded_MODU = '1' else
	'0';
  decout_ctrl_word_ID(17) <= 
	'1' when decoded_BRZ = '1' else 
	'0';
  decout_ctrl_word_ID(16) <= 
	'1' when decoded_BRNZ = '1' else 
	'0';
  decout_ctrl_word_ID(15) <= 
	'1' when decoded_BRZ = '1' else 
	'0';
  decout_ctrl_word_ID(14) <= 
	'1' when decoded_BRNZ = '1' else 
	'0';
  -- GPR.w_enb0:
  decout_ctrl_word_ID(13 downto 13) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_JPL = '1' or
  	decoded_JPRL = '1' or decoded_LB = '1' or decoded_LH = '1' or
  	decoded_LLS = '1' or decoded_LLSI = '1' or decoded_LRS = '1' or
  	decoded_LRSI = '1' or decoded_LSOI = '1' or decoded_LW = '1' or
  	decoded_MOD = '1' or decoded_MODU = '1' or decoded_MUL = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_ORI = '1' or decoded_SUB = '1' or decoded_SUBI = '1' or
  	decoded_XOR = '1' or decoded_XORI = '1' else
	"0";
  -- FWU0.fw2:
  decout_ctrl_word_ID(12 downto 12) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_JPL = '1' or
  	decoded_JPRL = '1' or decoded_LB = '1' or decoded_LH = '1' or
  	decoded_LLS = '1' or decoded_LLSI = '1' or decoded_LRS = '1' or
  	decoded_LRSI = '1' or decoded_LSOI = '1' or decoded_LW = '1' or
  	decoded_MOD = '1' or decoded_MODU = '1' or decoded_MUL = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_ORI = '1' or decoded_SUB = '1' or decoded_SUBI = '1' or
  	decoded_XOR = '1' or decoded_XORI = '1' else
	"0";
  -- FWU1.fw2:
  decout_ctrl_word_ID(11 downto 11) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_JPL = '1' or
  	decoded_JPRL = '1' or decoded_LB = '1' or decoded_LH = '1' or
  	decoded_LLS = '1' or decoded_LLSI = '1' or decoded_LRS = '1' or
  	decoded_LRSI = '1' or decoded_LSOI = '1' or decoded_LW = '1' or
  	decoded_MOD = '1' or decoded_MODU = '1' or decoded_MUL = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_ORI = '1' or decoded_SUB = '1' or decoded_SUBI = '1' or
  	decoded_XOR = '1' or decoded_XORI = '1' else
	"0";
  -- DMAU.rw_out:
  decout_ctrl_word_ID(10 downto 10) <= 
	"1" when decoded_SB = '1' or decoded_SH = '1' or decoded_SW = '1' else
	"0" when decoded_LB = '1' or decoded_LH = '1' or decoded_LW = '1' else
	"0";
  -- DMAU.mode_out:
  decout_ctrl_word_ID(9 downto 8) <= 
	"11" when decoded_LW = '1' or decoded_SW = '1' else 
	"01" when decoded_LH = '1' or decoded_SH = '1' else 
	"00" when decoded_LB = '1' or decoded_SB = '1' else 
	"00";
  -- DMAU.ext_out:
  decout_ctrl_word_ID(7 downto 7) <= 
	"1" when decoded_LB = '1' or decoded_LH = '1' else 
	"0";
  -- UA_MUX06.SEL:
  decout_ctrl_word_ID(6 downto 6) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_JPL = '1' or
  	decoded_JPRL = '1' or decoded_LLS = '1' or decoded_LLSI = '1' or
  	decoded_LRS = '1' or decoded_LRSI = '1' or decoded_LSOI = '1' or
  	decoded_MOD = '1' or decoded_MODU = '1' or decoded_MUL = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_ORI = '1' or decoded_SUB = '1' or decoded_SUBI = '1' or
  	decoded_XOR = '1' or decoded_XORI = '1' else
	"0" when decoded_LB = '1' or decoded_LH = '1' or decoded_LW = '1' else
	"0";
  -- UA_MUX11.SEL:
  decout_ctrl_word_ID(5 downto 5) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_LB = '1' or
  	decoded_LH = '1' or decoded_LLS = '1' or decoded_LLSI = '1' or
  	decoded_LRS = '1' or decoded_LRSI = '1' or decoded_LSOI = '1' or
  	decoded_LW = '1' or decoded_MOD = '1' or decoded_MODU = '1' or
  	decoded_MUL = '1' or decoded_NAND = '1' or decoded_NOR = '1' or
  	decoded_OR = '1' or decoded_ORI = '1' or decoded_SUB = '1' or
  	decoded_SUBI = '1' or decoded_XOR = '1' or decoded_XORI = '1' else
	"0" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"0";
  -- UA_MUX14.SEL:
  decout_ctrl_word_ID(4 downto 4) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_JPL = '1' or
  	decoded_JPRL = '1' or decoded_LLS = '1' or decoded_LLSI = '1' or
  	decoded_LRS = '1' or decoded_LRSI = '1' or decoded_LSOI = '1' or
  	decoded_MOD = '1' or decoded_MODU = '1' or decoded_MUL = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_ORI = '1' or decoded_SUB = '1' or decoded_SUBI = '1' or
  	decoded_XOR = '1' or decoded_XORI = '1' else
	"0" when decoded_LB = '1' or decoded_LH = '1' or decoded_LW = '1' else
	"0";
  -- UA_MUX19.SEL:
  decout_ctrl_word_ID(3 downto 3) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_LB = '1' or
  	decoded_LH = '1' or decoded_LLS = '1' or decoded_LLSI = '1' or
  	decoded_LRS = '1' or decoded_LRSI = '1' or decoded_LSOI = '1' or
  	decoded_LW = '1' or decoded_MOD = '1' or decoded_MODU = '1' or
  	decoded_MUL = '1' or decoded_NAND = '1' or decoded_NOR = '1' or
  	decoded_OR = '1' or decoded_ORI = '1' or decoded_SUB = '1' or
  	decoded_SUBI = '1' or decoded_XOR = '1' or decoded_XORI = '1' else
	"0" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"0";
  -- UA_MUX21.SEL:
  decout_ctrl_word_ID(2 downto 2) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_LB = '1' or
  	decoded_LH = '1' or decoded_LLS = '1' or decoded_LLSI = '1' or
  	decoded_LRS = '1' or decoded_LRSI = '1' or decoded_LSOI = '1' or
  	decoded_LW = '1' or decoded_MOD = '1' or decoded_MODU = '1' or
  	decoded_MUL = '1' or decoded_NAND = '1' or decoded_NOR = '1' or
  	decoded_OR = '1' or decoded_ORI = '1' or decoded_SUB = '1' or
  	decoded_SUBI = '1' or decoded_XOR = '1' or decoded_XORI = '1' else
	"0" when decoded_JPL = '1' or decoded_JPRL = '1' else 
	"0";
  -- UA_MUX23.SEL:
  decout_ctrl_word_ID(1 downto 1) <= 
	"1" when decoded_ADD = '1' or decoded_ADDI = '1' or decoded_AND = '1'
  	or decoded_ANDI = '1' or decoded_ARS = '1' or decoded_ARSI = '1' or
  	decoded_DIV = '1' or decoded_DIVU = '1' or decoded_EEQ = '1' or
  	decoded_ELT = '1' or decoded_ELTU = '1' or decoded_ENEQ = '1' or
  	decoded_EXBW = '1' or decoded_EXHW = '1' or decoded_JPL = '1' or
  	decoded_JPRL = '1' or decoded_LLS = '1' or decoded_LLSI = '1' or
  	decoded_LRS = '1' or decoded_LRSI = '1' or decoded_LSOI = '1' or
  	decoded_MOD = '1' or decoded_MODU = '1' or decoded_MUL = '1' or
  	decoded_NAND = '1' or decoded_NOR = '1' or decoded_OR = '1' or
  	decoded_ORI = '1' or decoded_SUB = '1' or decoded_SUBI = '1' or
  	decoded_XOR = '1' or decoded_XORI = '1' else
	"0" when decoded_LB = '1' or decoded_LH = '1' or decoded_LW = '1' else
	"0";
  decout_ctrl_word_ID(0) <= 
	'1' when decoded_LB = '1' or decoded_LH = '1' or decoded_LW = '1' or
  	decoded_SB = '1' or decoded_SH = '1' or decoded_SW = '1' else
	'0';

  decout_ctrl_word_in_EXE <= decout_ctrl_word_ID(63 downto 0);
  decout_ctrl_word_in_WB <= decout_ctrl_word_EXE(13 downto 0);
  decout_EXT16TO32_mode <= decout_ctrl_word_ID(89);
  decout_EXT26TO32_mode <= decout_ctrl_word_ID(88);
  decout_TRAP_HAND_REG_enb <= decout_ctrl_word_ID(87);
  decout_UA_MUX02_SEL <= decout_ctrl_word_ID(86 downto 85);
  decout_UA_MUX03_SEL <= decout_ctrl_word_ID(84 downto 83);
  decout_UA_MUX04_SEL <= decout_ctrl_word_ID(82);
  decout_UA_MUX08_SEL <= decout_ctrl_word_ID(81 downto 79);
  decout_UA_MUX10_SEL <= decout_ctrl_word_ID(78 downto 77);
  decout_UA_MUX12_SEL <= decout_ctrl_word_ID(76 downto 75);
  decout_UA_MUX16_SEL <= decout_ctrl_word_ID(74);
  decout_UA_MUX18_SEL <= decout_ctrl_word_ID(73 downto 72);
  decout_UA_MUX20_SEL <= decout_ctrl_word_ID(71 downto 70);
  decout_UA_MUX22_SEL <= decout_ctrl_word_ID(69 downto 68);
  decout_UA_MUX25_SEL <= decout_ctrl_word_ID(67 downto 65);
  decout_UA_MUX26_SEL <= decout_ctrl_word_ID(64);
  decout_ALU_mode <= decout_ctrl_word_EXE(63 downto 59);
  decout_ALU_cin <= decout_ctrl_word_EXE(58);
  decout_GPR_flag_enb <= decout_ctrl_word_EXE(57);
  decout_FWU0_fw1 <= decout_ctrl_word_EXE(56);
  decout_FWU1_fw1 <= decout_ctrl_word_EXE(55);
  decout_MUL_mode <= decout_ctrl_word_EXE(54);
  decout_DIV_mode <= decout_ctrl_word_EXE(53);
  decout_SFTvar_mode <= decout_ctrl_word_EXE(52 downto 51);
  decout_PC_load <= decout_ctrl_word_EXE(50);
  decout_GPR_status_enb <= decout_ctrl_word_EXE(49);
  decout_EXT8TO32_mode <= decout_ctrl_word_EXE(48);
  decout_EXT16TO32A_mode <= decout_ctrl_word_EXE(47);
  decout_UA_MUX00_SEL <= decout_ctrl_word_EXE(46);
  decout_UA_MUX05_SEL <= decout_ctrl_word_EXE(45 downto 42);
  decout_UA_MUX07_SEL <= decout_ctrl_word_EXE(41 downto 38);
  decout_UA_MUX09_SEL <= decout_ctrl_word_EXE(37);
  decout_UA_MUX13_SEL <= decout_ctrl_word_EXE(36 downto 33);
  decout_UA_MUX15_SEL <= decout_ctrl_word_EXE(32 downto 29);
  decout_UA_MUX17_SEL <= decout_ctrl_word_EXE(28);
  decout_UA_MUX24_SEL <= decout_ctrl_word_EXE(27 downto 24);
  cause_TRAPINT_inst_at_EXE_00 <= decout_ctrl_word_EXE(23);
  branch_inst_at_EXE_0 <= decout_ctrl_word_EXE(22);
  branch_inst_at_EXE_1 <= decout_ctrl_word_EXE(21);
  branch_inst_at_EXE_2 <= decout_ctrl_word_EXE(20);
  multcyc_MUL_start_c0_inst_EXE <= decout_ctrl_word_EXE(19);
  multcyc_DIV_start_c0_inst_EXE <= decout_ctrl_word_EXE(18);
  asgn_PC_load_inst_v0c0_EXE <= decout_ctrl_word_EXE(17);
  asgn_PC_load_inst_v0c1_EXE <= decout_ctrl_word_EXE(16);
  asgn_UA_MUX00_SEL_inst_v0c0_EXE <= decout_ctrl_word_EXE(15);
  asgn_UA_MUX00_SEL_inst_v0c1_EXE <= decout_ctrl_word_EXE(14);
  decout_GPR_w_enb0 <= decout_ctrl_word_WB(13);
  decout_FWU0_fw2 <= decout_ctrl_word_WB(12);
  decout_FWU1_fw2 <= decout_ctrl_word_WB(11);
  decout_DMAU_rw_out <= decout_ctrl_word_WB(10);
  decout_DMAU_mode_out <= decout_ctrl_word_WB(9 downto 8);
  decout_DMAU_ext_out <= decout_ctrl_word_WB(7);
  decout_UA_MUX06_SEL <= decout_ctrl_word_WB(6);
  decout_UA_MUX11_SEL <= decout_ctrl_word_WB(5);
  decout_UA_MUX14_SEL <= decout_ctrl_word_WB(4);
  decout_UA_MUX19_SEL <= decout_ctrl_word_WB(3);
  decout_UA_MUX21_SEL <= decout_ctrl_word_WB(2);
  decout_UA_MUX23_SEL <= decout_ctrl_word_WB(1);
  multcyc_DMAU_req_out_c0_inst_WB <= decout_ctrl_word_WB(0);

  -- resource control logic
  resctrl_IR_enb_inst <= 
	'0' when advance_stage_IF = '0' else 
	'1';
  resctrl_PC_hold_inst <= 
	'1' when advance_stage_IF = '0' else 
	'0';
  resctrl_DUMMY_STREG_enb_inst <= 
	'0' when advance_stage_IF = '0' else 
	'1';
  resctrl_ALU_mode_inst <= decout_ALU_mode;
  resctrl_ALU_cin_inst <= decout_ALU_cin;
  resctrl_GPR_flag_enb_inst <= 
	'0' when advance_stage_EXE = '0' else 
	decout_GPR_flag_enb;
  resctrl_FWU0_fw1_inst <= 
	'0' when advance_stage_EXE = '0' else 
	decout_FWU0_fw1;
  resctrl_FWU1_fw1_inst <= 
	'0' when advance_stage_EXE = '0' else 
	decout_FWU1_fw1;
  resctrl_GPR_w_enb0_inst <= 
	'0' when advance_stage_WB = '0' else 
	decout_GPR_w_enb0;
  resctrl_FWU0_fw2_inst <= 
	'0' when advance_stage_WB = '0' else 
	decout_FWU0_fw2;
  resctrl_FWU1_fw2_inst <= 
	'0' when advance_stage_WB = '0' else 
	decout_FWU1_fw2;
  resctrl_MUL_mode_inst <= decout_MUL_mode;
  resctrl_DIV_mode_inst <= decout_DIV_mode;
  resctrl_SFTvar_mode_inst <= decout_SFTvar_mode;
  resctrl_EXT16TO32_mode_inst <= decout_EXT16TO32_mode;
  resctrl_DMAU_rw_out_inst <= decout_DMAU_rw_out;
  resctrl_DMAU_mode_out_inst <= decout_DMAU_mode_out;
  resctrl_DMAU_ext_out_inst <= decout_DMAU_ext_out;
  resctrl_PC_load_inst <= 
	'0' when advance_stage_EXE = '0' else 
	'1' when valid_stage_EXE = '1' and ((asgn_PC_load_inst_v0c0_EXE = '1'
  	and CTRLIN_CMPEQ_02_EXE = '1') or (asgn_PC_load_inst_v0c1_EXE = '1' and
  	CTRLIN_CMPNEQ_00_EXE = '1')) else
	decout_PC_load;
  resctrl_EXT26TO32_mode_inst <= decout_EXT26TO32_mode;
  resctrl_TRAP_HAND_REG_enb_inst <= 
	'0' when advance_stage_ID = '0' else 
	decout_TRAP_HAND_REG_enb;
  resctrl_GPR_status_enb_inst <= 
	'0' when advance_stage_EXE = '0' else 
	decout_GPR_status_enb;
  resctrl_EXT8TO32_mode_inst <= decout_EXT8TO32_mode;
  resctrl_EXT16TO32A_mode_inst <= decout_EXT16TO32A_mode;
  resctrl_UA_MUX00_SEL_inst <= 
	'0' when valid_stage_EXE = '1' and ((asgn_UA_MUX00_SEL_inst_v0c0_EXE =
  	'1' and CTRLIN_CMPEQ_02_EXE = '1') or (asgn_UA_MUX00_SEL_inst_v0c1_EXE
  	= '1' and CTRLIN_CMPNEQ_00_EXE = '1')) else
	decout_UA_MUX00_SEL;
  resctrl_UA_MUX02_SEL_inst <= decout_UA_MUX02_SEL;
  resctrl_UA_MUX03_SEL_inst <= decout_UA_MUX03_SEL;
  resctrl_UA_MUX04_SEL_inst <= decout_UA_MUX04_SEL;
  resctrl_UA_MUX05_SEL_inst <= decout_UA_MUX05_SEL;
  resctrl_UA_MUX06_SEL_inst <= decout_UA_MUX06_SEL;
  resctrl_UA_MUX07_SEL_inst <= decout_UA_MUX07_SEL;
  resctrl_UA_MUX08_SEL_inst <= decout_UA_MUX08_SEL;
  resctrl_UA_MUX09_SEL_inst <= decout_UA_MUX09_SEL;
  resctrl_UA_MUX10_SEL_inst <= decout_UA_MUX10_SEL;
  resctrl_UA_MUX11_SEL_inst <= decout_UA_MUX11_SEL;
  resctrl_UA_MUX12_SEL_inst <= decout_UA_MUX12_SEL;
  resctrl_UA_MUX13_SEL_inst <= decout_UA_MUX13_SEL;
  resctrl_UA_MUX14_SEL_inst <= decout_UA_MUX14_SEL;
  resctrl_UA_MUX15_SEL_inst <= decout_UA_MUX15_SEL;
  resctrl_UA_MUX16_SEL_inst <= decout_UA_MUX16_SEL;
  resctrl_UA_MUX17_SEL_inst <= decout_UA_MUX17_SEL;
  resctrl_UA_MUX18_SEL_inst <= decout_UA_MUX18_SEL;
  resctrl_UA_MUX19_SEL_inst <= decout_UA_MUX19_SEL;
  resctrl_UA_MUX20_SEL_inst <= decout_UA_MUX20_SEL;
  resctrl_UA_MUX21_SEL_inst <= decout_UA_MUX21_SEL;
  resctrl_UA_MUX22_SEL_inst <= decout_UA_MUX22_SEL;
  resctrl_UA_MUX23_SEL_inst <= decout_UA_MUX23_SEL;
  resctrl_UA_MUX24_SEL_inst <= decout_UA_MUX24_SEL;
  resctrl_UA_MUX25_SEL_inst <= decout_UA_MUX25_SEL;
  resctrl_UA_MUX26_SEL_inst <= decout_UA_MUX26_SEL;
  resctrl_mc_MUL_start_inst <= multcyc_MUL_start_ready_EXE and
  	first_cycle_EXE;
  resctrl_mc_MUL_clear_inst <= multcyc_MUL_start_ready_EXE and not
  	CTRLIN_MUL_FIN and do_flush_EXE;
  resctrl_mc_DIV_start_inst <= multcyc_DIV_start_ready_EXE and
  	first_cycle_EXE;
  resctrl_mc_DIV_clear_inst <= multcyc_DIV_start_ready_EXE and not
  	CTRLIN_DIV_FIN and do_flush_EXE;
  resctrl_mc_DMAU_req_out_inst <= multcyc_DMAU_req_out_ready_WB and
  	first_cycle_WB;
  resctrl_mc_DMAU_cancel_out_inst <= multcyc_DMAU_req_out_ready_WB and
  	not CTRLIN_DMAU_ACK_IN and do_flush_WB;
  resctrl_EXTCATCH_OUT_wmode_intr <= 
	'1' when intr_code = INTR_EXTINT else 
	'0';
  resctrl_GPR_w_enb0_intr <= 
	'1' when intr_code = INTR_EXTINT or intr_code = INTR_TRAPINT else 
	'0';
  resctrl_GPR_status_enb_intr <= 
	'1' when intr_code = INTR_EXTINT or intr_code = INTR_TRAPINT else 
	'0';
  resctrl_PC_load_intr <= 
	'1' when intr_code = INTR_EXTINT or intr_code = INTR_RESET or
  	intr_code = INTR_TRAPINT else
	'0';
  resctrl_GPR_reset_intr <= 
	'1' when intr_code = INTR_RESET else 
	'0';
  resctrl_IR_reset_intr <= 
	'1' when intr_code = INTR_RESET else 
	'0';
  resctrl_DIV_reset_intr <= 
	'1' when intr_code = INTR_RESET else 
	'0';
  resctrl_MUL_reset_intr <= 
	'1' when intr_code = INTR_RESET else 
	'0';
  resctrl_TRAP_HAND_REG_reset_intr <= 
	'1' when intr_code = INTR_RESET else 
	'0';
  resctrl_ALU_mode_intr <= 
	"01001" when intr_code = INTR_TRAPINT else 
	"00000";
  resctrl_ALU_cin_intr <= 
	'0' when intr_code = INTR_TRAPINT else 
	'0';
  resctrl_UA_MUX01_SEL_intr <= 
	"00" when intr_code = INTR_EXTINT else 
	"01" when intr_code = INTR_RESET else 
	"10" when intr_code = INTR_TRAPINT else 
	"00";
  CTRLOUT_MUL_CLEAR <= 
	resctrl_mc_MUL_clear_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_DIV_CLEAR <= 
	resctrl_mc_DIV_clear_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_DMAU_CANCEL_OUT <= 
	resctrl_mc_DMAU_cancel_out_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_IR_ENB <= 
	resctrl_IR_enb_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_PC_HOLD <= 
	resctrl_PC_hold_inst when interrupt_handling = '0' else 
	'1';
  CTRLOUT_DUMMY_STREG_ENB <= 
	resctrl_DUMMY_STREG_enb_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_ALU_MODE <= 
	resctrl_ALU_mode_intr when interrupt_handling = '1' else 
	resctrl_ALU_mode_inst when interrupt_handling = '0' else 
	"00000";
  CTRLOUT_ALU_CIN <= 
	resctrl_ALU_cin_intr when interrupt_handling = '1' else 
	resctrl_ALU_cin_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_GPR_FLAG_ENB <= 
	resctrl_GPR_flag_enb_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_FWU0_FW1 <= 
	resctrl_FWU0_fw1_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_FWU1_FW1 <= 
	resctrl_FWU1_fw1_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_GPR_W_ENB0 <= 
	resctrl_GPR_w_enb0_intr when interrupt_handling = '1' else 
	resctrl_GPR_w_enb0_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_FWU0_FW2 <= 
	resctrl_FWU0_fw2_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_FWU1_FW2 <= 
	resctrl_FWU1_fw2_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_MUL_MODE <= 
	resctrl_MUL_mode_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_DIV_MODE <= 
	resctrl_DIV_mode_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_SFTVAR_MODE <= 
	resctrl_SFTvar_mode_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_EXT16TO32_MODE <= 
	resctrl_EXT16TO32_mode_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_DMAU_RW_OUT <= 
	resctrl_DMAU_rw_out_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_DMAU_MODE_OUT <= 
	resctrl_DMAU_mode_out_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_DMAU_EXT_OUT <= 
	resctrl_DMAU_ext_out_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_PC_LOAD <= 
	resctrl_PC_load_intr when interrupt_handling = '1' else 
	resctrl_PC_load_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_EXT26TO32_MODE <= 
	resctrl_EXT26TO32_mode_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_TRAP_HAND_REG_ENB <= 
	resctrl_TRAP_HAND_REG_enb_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_GPR_STATUS_ENB <= 
	resctrl_GPR_status_enb_intr when interrupt_handling = '1' else 
	resctrl_GPR_status_enb_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_EXT8TO32_MODE <= 
	resctrl_EXT8TO32_mode_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_EXT16TO32A_MODE <= 
	resctrl_EXT16TO32A_mode_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_MUL_START <= 
	resctrl_mc_MUL_start_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_DIV_START <= 
	resctrl_mc_DIV_start_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_DMAU_REQ_OUT <= 
	resctrl_mc_DMAU_req_out_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_EXTCATCH_OUT_WMODE <= 
	resctrl_EXTCATCH_OUT_wmode_intr when interrupt_handling = '1' else 
	'0';
  CTRLOUT_GPR_RESET <= 
	resctrl_GPR_reset_intr when interrupt_handling = '1' else 
	'0';
  CTRLOUT_IR_RESET <= 
	resctrl_IR_reset_intr when interrupt_handling = '1' else 
	'0';
  CTRLOUT_DIV_RESET <= 
	resctrl_DIV_reset_intr when interrupt_handling = '1' else 
	'0';
  CTRLOUT_MUL_RESET <= 
	resctrl_MUL_reset_intr when interrupt_handling = '1' else 
	'0';
  CTRLOUT_TRAP_HAND_REG_RESET <= 
	resctrl_TRAP_HAND_REG_reset_intr when interrupt_handling = '1' else 
	'0';
  CTRLOUT_UA_MUX00_SEL <= 
	resctrl_UA_MUX00_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX01_SEL <= 
	resctrl_UA_MUX01_SEL_intr when interrupt_handling = '1' else 
	"00";
  CTRLOUT_UA_MUX02_SEL <= 
	resctrl_UA_MUX02_SEL_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_UA_MUX03_SEL <= 
	resctrl_UA_MUX03_SEL_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_UA_MUX04_SEL <= 
	resctrl_UA_MUX04_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX05_SEL <= 
	resctrl_UA_MUX05_SEL_inst when interrupt_handling = '0' else 
	"0000";
  CTRLOUT_UA_MUX06_SEL <= 
	resctrl_UA_MUX06_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX07_SEL <= 
	resctrl_UA_MUX07_SEL_inst when interrupt_handling = '0' else 
	"0000";
  CTRLOUT_UA_MUX08_SEL <= 
	resctrl_UA_MUX08_SEL_inst when interrupt_handling = '0' else 
	"000";
  CTRLOUT_UA_MUX09_SEL <= 
	resctrl_UA_MUX09_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX10_SEL <= 
	resctrl_UA_MUX10_SEL_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_UA_MUX11_SEL <= 
	resctrl_UA_MUX11_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX12_SEL <= 
	resctrl_UA_MUX12_SEL_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_UA_MUX13_SEL <= 
	resctrl_UA_MUX13_SEL_inst when interrupt_handling = '0' else 
	"0000";
  CTRLOUT_UA_MUX14_SEL <= 
	resctrl_UA_MUX14_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX15_SEL <= 
	resctrl_UA_MUX15_SEL_inst when interrupt_handling = '0' else 
	"0000";
  CTRLOUT_UA_MUX16_SEL <= 
	resctrl_UA_MUX16_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX17_SEL <= 
	resctrl_UA_MUX17_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX18_SEL <= 
	resctrl_UA_MUX18_SEL_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_UA_MUX19_SEL <= 
	resctrl_UA_MUX19_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX20_SEL <= 
	resctrl_UA_MUX20_SEL_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_UA_MUX21_SEL <= 
	resctrl_UA_MUX21_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX22_SEL <= 
	resctrl_UA_MUX22_SEL_inst when interrupt_handling = '0' else 
	"00";
  CTRLOUT_UA_MUX23_SEL <= 
	resctrl_UA_MUX23_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX24_SEL <= 
	resctrl_UA_MUX24_SEL_inst when interrupt_handling = '0' else 
	"0000";
  CTRLOUT_UA_MUX25_SEL <= 
	resctrl_UA_MUX25_SEL_inst when interrupt_handling = '0' else 
	"000";
  CTRLOUT_UA_MUX26_SEL <= 
	resctrl_UA_MUX26_SEL_inst when interrupt_handling = '0' else 
	'0';
  CTRLOUT_UA_MUX27_SEL <= 
	'1' when interrupt_handling = '1' else 
	'0';
  CTRLOUT_UA_MUX28_SEL <= 
	'1' when interrupt_handling = '1' else 
	'0';
  CTRLOUT_UA_MUX29_SEL <= 
	'1' when interrupt_handling = '1' else 
	'0';
  CTRLOUT_UA_MUX30_SEL <= 
	'1' when interrupt_handling = '1' else 
	'0';
  CTRLOUT_UA_MUX31_SEL <= 
	'1' when interrupt_handling = '1' else 
	'0';
  CTRLOUT_UA_MUX32_SEL <= 
	'1' when interrupt_handling = '1' else 
	'0';
  CTRLOUT_UA_PREG00_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG01_ENB <= pipereg_enb_WB;
  CTRLOUT_UA_PREG02_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG03_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG04_ENB <= pipereg_enb_WB;
  CTRLOUT_UA_PREG05_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG06_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG07_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG08_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG09_ENB <= pipereg_enb_WB;
  CTRLOUT_UA_PREG10_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG11_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG12_ENB <= pipereg_enb_WB;
  CTRLOUT_UA_PREG13_ENB <= pipereg_enb_WB;
  CTRLOUT_UA_PREG14_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG15_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG16_ENB <= pipereg_enb_WB;
  CTRLOUT_UA_PREG17_ENB <= pipereg_enb_EXE;
  CTRLOUT_UA_PREG18_ENB <= pipereg_enb_WB;
  CTRLOUT_UA_PREG19_ENB <= pipereg_enb_WB;
end RTL;

-----------------------------------------
-- Generated by ASIP Meister ver.2.3.4 --
-----------------------------------------
