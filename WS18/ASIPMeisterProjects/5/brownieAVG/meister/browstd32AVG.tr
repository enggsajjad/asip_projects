// Copyright (C) 2011 ASIP Solutions, Inc. All rights reserved. 
// Generated by ASIP Meister 2.3 on 2018/12/05 17:17:17 
processor_name{"Brownie STD 32"}

processor_nickname{BrownieSTD32}

sw_storage{
sw_regfile{
GPR0{class{GPR}resource{GPR}number{0}width{32}usage{zero_reg}
location{original}binary{00000}},
GPR1{class{GPR}resource{GPR}number{1}width{32}usage{reg}
location{original}binary{00001}},
GPR2{class{GPR}resource{GPR}number{2}width{32}usage{reg}
location{original}binary{00010}},
GPR3{class{GPR}resource{GPR}number{3}width{32}usage{link}
location{original}binary{00011}},
GPR4{class{GPR}resource{GPR}number{4}width{32}usage{fp}
location{original}binary{00100}},
GPR5{class{GPR}resource{GPR}number{5}width{32}usage{sp}
location{original}binary{00101}},
GPR6{class{GPR}resource{GPR}number{6}width{32}usage{return}
location{original}binary{00110}},
GPR7{class{GPR}resource{GPR}number{7}width{32}usage{return}
location{original}binary{00111}},
GPR8{class{GPR}resource{GPR}number{8}width{32}usage{reg}
location{original}binary{01000}},
GPR9{class{GPR}resource{GPR}number{9}width{32}usage{reg}
location{original}binary{01001}},
GPR10{class{GPR}resource{GPR}number{10}width{32}usage{reg}
location{original}binary{01010}},
GPR11{class{GPR}resource{GPR}number{11}width{32}usage{reg}
location{original}binary{01011}},
GPR12{class{GPR}resource{GPR}number{12}width{32}usage{reg}
location{original}binary{01100}},
GPR13{class{GPR}resource{GPR}number{13}width{32}usage{reg}
location{original}binary{01101}},
GPR14{class{GPR}resource{GPR}number{14}width{32}usage{reg}
location{original}binary{01110}},
GPR15{class{GPR}resource{GPR}number{15}width{32}usage{reg}
location{original}binary{01111}},
GPR16{class{GPR}resource{GPR}number{16}width{32}usage{reg}
location{original}binary{10000}},
GPR17{class{GPR}resource{GPR}number{17}width{32}usage{reg}
location{original}binary{10001}},
GPR18{class{GPR}resource{GPR}number{18}width{32}usage{reg}
location{original}binary{10010}},
GPR19{class{GPR}resource{GPR}number{19}width{32}usage{reg}
location{original}binary{10011}},
GPR20{class{GPR}resource{GPR}number{20}width{32}usage{reg}
location{original}binary{10100}},
GPR21{class{GPR}resource{GPR}number{21}width{32}usage{reg}
location{original}binary{10101}},
GPR22{class{GPR}resource{GPR}number{22}width{32}usage{reg}
location{original}binary{10110}},
GPR23{class{GPR}resource{GPR}number{23}width{32}usage{reg}
location{original}binary{10111}},
GPR24{class{GPR}resource{GPR}number{24}width{32}usage{reg}
location{original}binary{11000}},
GPR25{class{GPR}resource{GPR}number{25}width{32}usage{reg}
location{original}binary{11001}},
GPR26{class{GPR}resource{GPR}number{26}width{32}usage{reg}
location{original}binary{11010}},
GPR27{class{GPR}resource{GPR}number{27}width{32}usage{reg}
location{original}binary{11011}},
GPR28{class{GPR}resource{GPR}number{28}width{32}usage{reg}
location{original}binary{11100}},
GPR29{class{GPR}resource{GPR}number{29}width{32}usage{reg}
location{original}binary{11101}},
GPR30{class{GPR}resource{GPR}number{30}width{32}usage{reg}
location{original}binary{11110}},
GPR31{class{GPR}resource{GPR}number{31}width{32}usage{reg}
location{original}binary{11111}}
}
sw_reg{
PC{resource{PC}width{32}usage{pc}location{original}}
IR{resource{IR}width{32}usage{ireg}location{original}}
DUMMY_STREG{resource{DUMMY_STREG}width{32}usage{reg}location{original}}
}
sw_i_memory{
IMAU{resource{IMAU}width{32}access{32}}
}
sw_d_memory{
DMAU{resource{DMAU}width{32}access{8}}
}
}

Instruction_type{
sub_field_name{
NO_VLIW{
width{"31","0"},
type{
"RR"{
Operand{name{"rs1"},width{"31","27"},
addr_mode{RDirect,rs1,Resource,GPR}},
Operand{name{"rs2"},width{"26","22"},
addr_mode{RDirect,rs2,Resource,GPR}},
Operand{name{"rd"},width{"21","17"},
addr_mode{RDirect,rd,Resource,GPR}},
OP-code{name{"f_type"},width{"16","14"},
addr_mode{none,none,none,none}},
OP-code{name{"func"},width{"13","6"},
addr_mode{none,none,none,none}},
OP-code{binary{"000001"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"RI"{
Operand{name{"const"},width{"31","16"},
addr_mode{Immediate_data,const,Immediate,none}},
Operand{name{"rs1"},width{"15","11"},
addr_mode{RDirect,rs1,Resource,GPR}},
Operand{name{"rd"},width{"10","6"},
addr_mode{RDirect,rd,Resource,GPR}},
OP-code{name{"op"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"MA_ST"{
Operand{name{"const"},width{"31","16"},
addr_mode{RIwDisp,addr,Displacement,none}},
Operand{name{"rs1"},width{"15","11"},
addr_mode{RDirect,rs1,Resource,GPR}},
Operand{name{"rd"},width{"10","6"},
addr_mode{RIwDisp,addr,Resource,GPR}},
OP-code{name{"op"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"MA_LD"{
Operand{name{"const"},width{"31","16"},
addr_mode{RIwDisp,addr,Displacement,none}},
Operand{name{"rs1"},width{"15","11"},
addr_mode{RIwDisp,addr,Resource,GPR}},
Operand{name{"rd"},width{"10","6"},
addr_mode{RDirect,rd,Resource,GPR}},
OP-code{name{"op"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"BR"{
Operand{name{"const"},width{"31","16"},
addr_mode{Immediate_data,const,Immediate,none}},
Operand{name{"rs1"},width{"15","11"},
addr_mode{RDirect,rs1,Resource,GPR}},
Dont_care{name{"unused"},width{"10","6"},
addr_mode{none,none,none,none}},
OP-code{name{"op"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"JP"{
Operand{name{"const"},width{"31","6"},
addr_mode{Immediate_data,const,Immediate,none}},
OP-code{name{"op"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"JPR"{
Dont_care{name{"unused"},width{"31","11"},
addr_mode{none,none,none,none}},
Operand{name{"rs1"},width{"10","6"},
addr_mode{RDirect,rs1,Resource,GPR}},
OP-code{name{"op"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"SP"{
Dont_care{name{"unused"},width{"31","11"},
addr_mode{none,none,none,none}},
OP-code{name{"func"},width{"10","6"},
addr_mode{none,none,none,none}},
OP-code{binary{"000000"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"RT"{
Operand{name{"rd"},width{"31","27"},
addr_mode{RDirect,rd,Resource,GPR}},
Operand{name{"rs1"},width{"26","22"},
addr_mode{RDirect,rs1,Resource,GPR}},
OP-code{name{"func"},width{"21","11"},
addr_mode{none,none,none,none}},
OP-code{binary{"00010"},width{"10","6"},
addr_mode{none,none,none,none}},
OP-code{binary{"000000"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"BR2"{
Operand{name{"const"},width{"31","16"},
addr_mode{Immediate_data,const,Immediate,none}},
Operand{name{"rs1"},width{"15","11"},
addr_mode{RDirect,rs1,Resource,GPR}},
Operand{name{"rs2"},width{"10","6"},
addr_mode{RDirect,rs2,Resource,GPR}},
OP-code{name{"op"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"RR1"{
Operand{name{"rs"},width{"31","27"},
addr_mode{RDirect,rs,Resource,GPR}},
OP-code{binary{"00000"},width{"26","22"},
addr_mode{none,none,none,none}},
Operand{name{"rd"},width{"21","17"},
addr_mode{RDirect,rd,Resource,GPR}},
OP-code{binary{"00000000000"},width{"16","6"},
addr_mode{none,none,none,none}},
OP-code{binary{"010001"},width{"5","0"},
addr_mode{none,none,none,none}}
},
"RR2"{
Operand{name{"rs1"},width{"31","27"},
addr_mode{RDirect,rs1,Resource,GPR}},
Operand{name{"rs2"},width{"26","22"},
addr_mode{RDirect,rs2,Resource,GPR}},
Operand{name{"rdMin"},width{"21","17"},
addr_mode{RDirect,rdMin,Resource,GPR}},
Operand{name{"rdMax"},width{"16","12"},
addr_mode{RDirect,rdMax,Resource,GPR}},
OP-code{binary{"000000"},width{"11","6"},
addr_mode{none,none,none,none}},
OP-code{binary{"010010"},width{"5","0"},
addr_mode{none,none,none,none}}
}
}
}
}
}

Instruction{
NO_VLIW{
"ADD"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"000"},width{"16","14"}},
OP-code{binary{"00000000"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"ADD" rd "," rs1 "," rs2}
},
"SUB"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"000"},width{"16","14"}},
OP-code{binary{"00000001"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"SUB" rd "," rs1 "," rs2}
},
"MUL"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"000"},width{"16","14"}},
OP-code{binary{"00000010"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"MUL" rd "," rs1 "," rs2}
},
"DIV"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"000"},width{"16","14"}},
OP-code{binary{"00000011"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"DIV" rd "," rs1 "," rs2}
},
"DIVU"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"000"},width{"16","14"}},
OP-code{binary{"00000101"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"DIVU" rd "," rs1 "," rs2}
},
"MOD"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"000"},width{"16","14"}},
OP-code{binary{"00000100"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"MOD" rd "," rs1 "," rs2}
},
"MODU"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"000"},width{"16","14"}},
OP-code{binary{"00000110"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"MODU" rd "," rs1 "," rs2}
},
"AND"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"001"},width{"16","14"}},
OP-code{binary{"00000000"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"AND" rd "," rs1 "," rs2}
},
"NAND"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"001"},width{"16","14"}},
OP-code{binary{"00000011"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"NAND" rd "," rs1 "," rs2}
},
"OR"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"001"},width{"16","14"}},
OP-code{binary{"00000001"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"OR" rd "," rs1 "," rs2}
},
"NOR"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"001"},width{"16","14"}},
OP-code{binary{"00000100"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"NOR" rd "," rs1 "," rs2}
},
"XOR"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"001"},width{"16","14"}},
OP-code{binary{"00000010"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"XOR" rd "," rs1 "," rs2}
},
"LLS"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"010"},width{"16","14"}},
OP-code{binary{"00000000"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"LLS" rd "," rs1 "," rs2}
},
"LRS"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"010"},width{"16","14"}},
OP-code{binary{"00000001"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"LRS" rd "," rs1 "," rs2}
},
"ARS"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"010"},width{"16","14"}},
OP-code{binary{"00000010"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"ARS" rd "," rs1 "," rs2}
},
"ELT"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"011"},width{"16","14"}},
OP-code{binary{"00000000"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"ELT" rd "," rs1 "," rs2}
},
"ELTU"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"011"},width{"16","14"}},
OP-code{binary{"00000001"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"ELTU" rd "," rs1 "," rs2}
},
"EEQ"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"011"},width{"16","14"}},
OP-code{binary{"00000010"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"EEQ" rd "," rs1 "," rs2}
},
"ENEQ"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"011"},width{"16","14"}},
OP-code{binary{"00000011"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"ENEQ" rd "," rs1 "," rs2}
},
"ADDI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"100000"},width{"5","0"}}
format{"ADDI" rd "," rs1 "," const}
},
"SUBI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"100001"},width{"5","0"}}
format{"SUBI" rd "," rs1 "," const}
},
"ANDI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"100010"},width{"5","0"}}
format{"ANDI" rd "," rs1 "," const}
},
"ORI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"100011"},width{"5","0"}}
format{"ORI" rd "," rs1 "," const}
},
"XORI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"100100"},width{"5","0"}}
format{"XORI" rd "," rs1 "," const}
},
"LLSI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"100101"},width{"5","0"}}
format{"LLSI" rd "," rs1 "," const}
},
"LRSI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"100110"},width{"5","0"}}
format{"LRSI" rd "," rs1 "," const}
},
"ARSI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"100111"},width{"5","0"}}
format{"ARSI" rd "," rs1 "," const}
},
"LSOI"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"101000"},width{"5","0"}}
format{"LSOI" rd "," rs1 "," const}
},
"LB"{
type{"MA_LD"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"000010"},width{"5","0"}}
format{"LB" rd "," addr}
},
"LH"{
type{"MA_LD"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"000011"},width{"5","0"}}
format{"LH" rd "," addr}
},
"LW"{
type{"MA_LD"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"000100"},width{"5","0"}}
format{"LW" rd "," addr}
},
"SB"{
type{"MA_ST"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"000101"},width{"5","0"}}
format{"SB" addr "," rs1}
},
"SH"{
type{"MA_ST"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"000110"},width{"5","0"}}
format{"SH" addr "," rs1}
},
"SW"{
type{"MA_ST"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"000111"},width{"5","0"}}
format{"SW" addr "," rs1}
},
"BRZ"{
type{"BR"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Dont_care{name{"unused"},width{"10","6"}},
OP-code{binary{"001001"},width{"5","0"}}
format{"BRZ" rs1 "," const}
},
"BRNZ"{
type{"BR"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Dont_care{name{"unused"},width{"10","6"}},
OP-code{binary{"001010"},width{"5","0"}}
format{"BRNZ" rs1 "," const}
},
"JP"{
type{"JP"},
void{"no"},
Operand{name{"const"},width{"31","6"}},
OP-code{binary{"001011"},width{"5","0"}}
format{"JP" const}
},
"JPL"{
type{"JP"},
void{"no"},
Operand{name{"const"},width{"31","6"}},
OP-code{binary{"001100"},width{"5","0"}}
format{"JPL" const}
},
"TRAP"{
type{"JP"},
void{"no"},
Operand{name{"const"},width{"31","6"}},
OP-code{binary{"001101"},width{"5","0"}}
format{"TRAP" const}
},
"JPR"{
type{"JPR"},
void{"no"},
Dont_care{name{"unused"},width{"31","11"}},
Operand{name{"rs1"},width{"10","6"}},
OP-code{binary{"001110"},width{"5","0"}}
format{"JPR" rs1}
},
"JPRL"{
type{"JPR"},
void{"no"},
Dont_care{name{"unused"},width{"31","11"}},
Operand{name{"rs1"},width{"10","6"}},
OP-code{binary{"001111"},width{"5","0"}}
format{"JPRL" rs1}
},
"NOP"{
type{"SP"},
void{"no"},
Dont_care{name{"unused"},width{"31","11"}},
OP-code{binary{"00000"},width{"10","6"}},
OP-code{binary{"000000"},width{"5","0"}}
format{"NOP"}
},
"RETI"{
type{"SP"},
void{"no"},
Dont_care{name{"unused"},width{"31","11"}},
OP-code{binary{"00001"},width{"10","6"}},
OP-code{binary{"000000"},width{"5","0"}}
format{"RETI"}
},
"EXBW"{
type{"RT"},
void{"no"},
Operand{name{"rd"},width{"31","27"}},
Operand{name{"rs1"},width{"26","22"}},
OP-code{binary{"00000000000"},width{"21","11"}},
OP-code{binary{"00010"},width{"10","6"}},
OP-code{binary{"000000"},width{"5","0"}}
format{"EXBW" rd "," rs1}
},
"EXHW"{
type{"RT"},
void{"no"},
Operand{name{"rd"},width{"31","27"}},
Operand{name{"rs1"},width{"26","22"}},
OP-code{binary{"00000000001"},width{"21","11"}},
OP-code{binary{"00010"},width{"10","6"}},
OP-code{binary{"000000"},width{"5","0"}}
format{"EXHW" rd "," rs1}
},
"NXOR"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"001"},width{"16","14"}},
OP-code{binary{"00000101"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"NXOR" rd "," rs1 "," rs2}
},
"BGEU"{
type{"BR2"},
void{"yes"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rs2"},width{"10","6"}},
OP-code{binary{"010000"},width{"5","0"}}
format{"BGEU" rs1 "," rs2 "," const}
},
"AVG"{
type{"RR"},
void{"no"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"001"},width{"16","14"}},
OP-code{binary{"00000110"},width{"13","6"}},
OP-code{binary{"000001"},width{"5","0"}}
format{"AVG" rd "," rs1 "," rs2}
},
"SWAP"{
type{"RR1"},
void{"no"},
Operand{name{"rs"},width{"31","27"}},
OP-code{binary{"00000"},width{"26","22"}},
Operand{name{"rd"},width{"21","17"}},
OP-code{binary{"00000000000"},width{"16","6"}},
OP-code{binary{"010001"},width{"5","0"}}
format{"SWAP" rd "," rs}
},
"MINMAX"{
type{"RR2"},
void{"yes"},
Operand{name{"rs1"},width{"31","27"}},
Operand{name{"rs2"},width{"26","22"}},
Operand{name{"rdMin"},width{"21","17"}},
Operand{name{"rdMax"},width{"16","12"}},
OP-code{binary{"000000"},width{"11","6"}},
OP-code{binary{"010010"},width{"5","0"}}
format{"MINMAX" rdMin "," rdMax "," rs1 "," rs2}
},
"ROT"{
type{"RI"},
void{"no"},
Operand{name{"const"},width{"31","16"}},
Operand{name{"rs1"},width{"15","11"}},
Operand{name{"rd"},width{"10","6"}},
OP-code{binary{"101001"},width{"5","0"}}
format{"ROT" rd "," rs1 "," const}
}
}
}

C_data_type{
char{"8","8"}
short{"16","16"}
int{"32","32"}
long{"32","32"}
float{"32","32"}
double{"64","64"}
pointer{"32","32"}
struct{"8","none"}
stack{"32","none"}
data{"8","none"}
}

C_struct_dec{

}

macro_data_type{
Int7to0{sign{su}type{char}},
SInt7to0{sign{s}type{char}},
UInt7to0{sign{u}type{char}},
Int15to0{sign{su}type{char,short,short2}},
SInt15to0{sign{s}type{char,short,short2}},
UInt15to0{sign{u}type{char,short,short2}},
Int31to0{sign{su}type{char,short,short2,long,long2}},
SInt31to0{sign{s}type{char,short,short2,long,long2}},
UInt31to0{sign{u}type{char,short,short2,long,long2}}
}

C_ckf_prototype{
NXOR{instruction{NXOR}
input{
rs1{type{GPR},width{32}},
rs2{type{GPR},width{32}}
}
output{
rd{type{GPR},width{32}}
}
},
BGEU{instruction{BGEU}
input{
const{type{signed},width{16}},
rs1{type{GPR},width{32}},
rs2{type{GPR},width{32}}
}
output{
}
},
AVG{instruction{AVG}
input{
rs1{type{GPR},width{32}},
rs2{type{GPR},width{32}}
}
output{
rd{type{GPR},width{32}}
}
},
SWAP{instruction{SWAP}
input{
rs{type{GPR},width{32}}
}
output{
rd{type{GPR},width{32}}
}
},
MINMAX{instruction{MINMAX}
input{
rs1{type{GPR},width{32}},
rs2{type{GPR},width{32}},
rdMin{type{GPR},width{32}},
rdMax{type{GPR},width{32}}
}
output{
rdMin{type{GPR},width{32}},
rdMax{type{GPR},width{32}}
}
},
ROT{instruction{ROT}
input{
const{type{signed},width{16}},
rs1{type{GPR},width{32}}
}
output{
rd{type{GPR},width{32}}
}
}
}

Instruction_behavior{
}
