// Copyright (C) 2011 ASIP Solutions, Inc. All rights reserved. 
// Generated by ASIP Meister 2.3 on 2021/07/02 01:29:46 
structure
{
  portion
  PC
  {
    class {pcu}
    stage {1}
    connection {
      data_out {
        stage 1 IMAU.addr_out
      }
    }
  }
  portion
  PC
  {
    class {pcu}
    stage {2}
    connection {
      data_out {
        stage 3 ALU.a
        stage 3 FWU0.data1
        stage 3 FWU1.data1
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
      }
    }
  }
  portion
  PC
  {
    class {pcu}
    stage {3}
    connection {
      dummy{}
    }
  }
  portion
  IR
  {
    class {register}
    stage {2}
    connection {
      data_out {
        stage 2 GPR.r_sel0
        stage 2 GPR.r_sel1
        stage 3 FWU0.num1
        stage 2 GPR.r_sel0
        stage 2 EXT16TO32.data_in
        stage 3 FWU0.num1
        stage 2 EXT26TO32.data_in
        stage 2 GPR.r_sel0
        stage 4 GPR.w_sel0
        stage 3 FWU2.num1
      }
    }
  }
  portion
  IR
  {
    class {register}
    stage {1}
    connection {
      dummy{}
    }
  }
  IMAU
  {
    class {mifu}
    stage {1}
    connection {
      data_in {
        stage 1 IR.data_in
      }
    }
  }
  DMAU
  {
    class {mifu}
    stage {4}
    connection {
      data_in {
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
        stage 4 GPR.data_in0
        stage 4 GPR.data_in1
      }
    }
  }
  ALU
  {
    class {alu}
    stage {3}
    connection {
      result {
        stage 3 FWU0.data1
        stage 3 FWU1.data1
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
        stage 4 DMAU.addr_out
        stage 3 PC.data_in
      }
      flag__ {
        stage 3 GPR.flag_in
        stage 3 FWU0.data1
        stage 3 FWU0.data1
        stage 3 FWU0.data1
        stage 3 FWU0.data1
        stage 3 FWU0.data1
      }
    }
  }
  MUL
  {
    class {multiplier}
    stage {3}
    connection {
      result {
        stage 3 FWU0.data1
      }
    }
  }
  DIV
  {
    class {divider}
    stage {3}
    connection {
      q {
        stage 3 FWU0.data1
        stage 3 FWU1.data1
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
      }
      r {
        stage 3 FWU0.data1
        stage 3 FWU1.data1
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
      }
    }
  }
  EXT8TO32
  {
    class {extender}
    stage {3}
    connection {
      data_out {
        stage 3 FWU0.data1
        stage 3 FWU1.data1
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
      }
    }
  }
  EXT16TO32
  {
    class {extender}
    stage {2}
    connection {
      data_out {
        stage 3 ALU.b
      }
    }
  }
  EXT26TO32
  {
    class {extender}
    stage {2}
    connection {
      data_out {
        stage 3 ALU.b
        stage 2 TRAP_HAND_REG.data_in
      }
    }
  }
  SFTvar
  {
    class {shifter}
    stage {3}
    connection {
      data_out {
        stage 3 FWU0.data1
        stage 3 FWU1.data1
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
      }
    }
  }
  portion
  FWU0
  {
    class {fwu}
    stage {2}
    connection {
      data_out {
        stage 3 ALU.a
        stage 3 MUL.a
        stage 3 DIV.a
        stage 3 SFTvar.data_in
        stage 3 PC.data_in
        stage 3 MMX.din1
        stage 3 ALU.a
        stage 3 GPR.data_in0
        stage 3 GPR.data_in0
        stage 3 EXT8TO32.data_in
        stage 3 EXT16TO32A.data_in
        stage 3 FWU0.data1
        stage 3 FWU2.data1
      }
    }
  }
  portion
  FWU0
  {
    class {fwu}
    stage {3}
    connection {
      dummy{}
    }
  }
  portion
  FWU1
  {
    class {fwu}
    stage {2}
    connection {
      data_out {
        stage 3 ALU.b
        stage 3 MUL.b
        stage 3 DIV.b
        stage 4 DMAU.data_out
        stage 3 MMX.din2
        stage 3 SFTvar.ctrl
        stage 3 FWU0.data1
        stage 3 FWU2.data1
      }
    }
  }
  portion
  FWU1
  {
    class {fwu}
    stage {3}
    connection {
      dummy{}
    }
  }
  portion
  DUMMY_STREG
  {
    class {dummy_register}
    stage {2}
    connection {
      data_out {
        stage 3 GPR.status_in
      }
    }
  }
  portion
  DUMMY_STREG
  {
    class {dummy_register}
    stage {1}
    connection {
      dummy{}
    }
  }
  portion
  GPR
  {
    class {browregfile}
    stage {1}
    connection {
      status_out {
        stage 1 DUMMY_STREG.data_in
      }
      data_out0 {
      }
      data_out1 {
      }
      data_out2 {
      }
    }
  }
  portion
  GPR
  {
    class {browregfile}
    stage {2}
    connection {
      status_out {
      }
      data_out0 {
        stage 2 FWU0.data0
        stage 4 DMAU.addr_out
        stage 3 IDX.index_in
        stage 3 CLMP.cmpval
        stage 3 PCM.step
        stage 3 STEP.data_in
      }
      data_out1 {
        stage 2 FWU1.data0
        stage 3 CLMP.lesserval
        stage 3 PCM.delta
        stage 3 IDX.data_in_new
      }
      data_out2 {
        stage 3 IDX.index_in
        stage 3 CLMP.greaterval
        stage 3 PCM.valpred_in
      }
    }
  }
  portion
  GPR
  {
    class {browregfile}
    stage {3}
    connection {
      dummy{}
    }
  }
  EXT16TO32A
  {
    class {extender}
    stage {3}
    connection {
      data_out {
        stage 3 FWU0.data1
        stage 3 FWU1.data1
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
      }
    }
  }
  portion
  STEP
  {
    class {stepsize}
    stage {3}
    connection {
      data_out {
        stage 4 GPR.data_in0
      }
    }
  }
  portion
  STEP
  {
    class {stepsize}
    stage {2}
    connection {
      data_out {
        stage 4 GPR.data_in0
      }
    }
  }
  IDX
  {
    class {index}
    stage {3}
    connection {
      index_out {
        stage 4 GPR.data_in1
        stage 4 GPR.data_in0
      }
    }
  }
  CLMP
  {
    class {clamp}
    stage {3}
    connection {
      dout {
        stage 4 GPR.data_in0
      }
    }
  }
  PCM
  {
    class {adpcm}
    stage {3}
    connection {
      valpred_out {
        stage 4 GPR.data_in0
      }
    }
  }
  MMX
  {
    class {minmax}
    stage {3}
    connection {
      doutMin {
        stage 3 FWU0.data1
        stage 3 FWU1.data1
        stage 4 GPR.data_in0
        stage 4 FWU0.data2
        stage 4 FWU1.data2
      }
      doutMax {
        stage 3 FWU2.data1
        stage 3 FWU3.data1
        stage 4 GPR.data_in1
        stage 4 FWU2.data2
        stage 4 FWU3.data2
      }
    }
  }
}
