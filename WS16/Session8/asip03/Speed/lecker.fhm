<?xml version="1.0" encoding="Shift_JIS" ?>
<FHM>
  <model_name> lecker </model_name>

  <model>
    <design_level> behavior </design_level>
    <version> 1.0 </version>
    <author> <![CDATA[ asip03 ]]> </author>
    <affiliation> <![CDATA[ Uni Karlsruhe ]]> </affiliation>
    <model_info> <![CDATA[ - ]]> </model_info>

    <parameter>
      <parameter_value key="bit_width">
        <value> 16 </value>
        <value> 32 </value>
      </parameter_value>
    </parameter>

    <function_description>
      <script>
        <![CDATA[
#!/usr/bin/perl
# This script generates register function definition in behavior level
# parameter : bit_width

if ($#ARGV != 0) {
    print "number of parameters is wrong.\n";
    print "usage : this_script bit_width\n";
    exit (100);
}

$bit_width    = $ARGV[0];
$msb = $bit_width - 1;

print <<FHM_DL_LECKER;
/** lecker */
function lecker {
  input {
    bit [6:0] index;
    bit [3:0] delta;
  }
  output {
    bit [$msb:0] data;
  }
  control {
  }
  protocol {
  }
}
FHM_DL_LECKER

exit (0);
        ]]>
      </script>
    </function_description>

    <function_conv>
      <script>
        <![CDATA[
#!/usr/bin/perl
# This script generates register function definition in behavior level
# parameter : bit_width

if ($#ARGV != 0) {
    print "number of parameters is wrong.\n";
    print "usage : this_script bit_width\n";
    exit (100);
}

$bit_width    = $ARGV[0];
$msb = $bit_width - 1;

print <<FHM_DL_LECKER;
/** lecker */
function lecker {
  input {
    bit [6:0] index;
    bit [3:0] delta;
  }
  output {
    bit [$msb:0] data;
  }
  control {
  }
  protocol {
  }
}
FHM_DL_LECKER

exit (0);
        ]]>
      </script>
    </function_conv>

    <function_port>
      <script>
        <![CDATA[
#!/usr/bin/perl
# This script generates register port information in behavior level
# parameter : bit_width

if ($#ARGV != 0) {
    print "number of parameters is wrong.\n";
    print "usage : this_script bit_width\n";
    exit (100);
}

$bit_width    = $ARGV[0];

$msb = $bit_width-1;

print <<FHM_DL_PORTS;
index in bit_vector 6    0 data
delta in bit_vector 3    0 data
data out bit_vector $msb 0 data
FHM_DL_PORTS

exit (0);
        ]]>
      </script>
    </function_port>

    <design>
      <design_lang> vhdl </design_lang>

      <instance>
        <script>
          <![CDATA[
#!/usr/bin/perl
# This script generates register instance in behavior level
# parameter : instance_name bit_width

if ($#ARGV != 1) {
  print "number of parameters is wrong.\n";
  print "usage : this_script instance_name bit_width\n";
  exit (100);
}

$instance_name = $ARGV[0];
$bit_width     = $ARGV[1];


$msb = $bit_width - 1;

$signals = <<END_SIGNALS;
-- Your signal declaration here
type INT_ARRAY is array (integer range 0 to 2047) of integer;
CONSTANT lut : INT_ARRAY := (
0,1,3,4,7,8,10,11,0,-1,-3,-4,-7,-8,-10,-11,
1,3,5,7,9,11,13,15,-1,-3,-5,-7,-9,-11,-13,-15,
1,3,5,7,10,12,14,16,-1,-3,-5,-7,-10,-12,-14,-16,
1,3,6,8,11,13,16,18,-1,-3,-6,-8,-11,-13,-16,-18,
1,3,6,8,12,14,17,19,-1,-3,-6,-8,-12,-14,-17,-19,
1,4,7,10,13,16,19,22,-1,-4,-7,-10,-13,-16,-19,-22,
1,4,7,10,14,17,20,23,-1,-4,-7,-10,-14,-17,-20,-23,
1,4,8,11,15,18,22,25,-1,-4,-8,-11,-15,-18,-22,-25,
2,6,10,14,18,22,26,30,-2,-6,-10,-14,-18,-22,-26,-30,
2,6,10,14,19,23,27,31,-2,-6,-10,-14,-19,-23,-27,-31,
2,6,11,15,21,25,30,34,-2,-6,-11,-15,-21,-25,-30,-34,
2,7,12,17,23,28,33,38,-2,-7,-12,-17,-23,-28,-33,-38,
2,7,13,18,25,30,36,41,-2,-7,-13,-18,-25,-30,-36,-41,
3,9,15,21,28,34,40,46,-3,-9,-15,-21,-28,-34,-40,-46,
3,10,17,24,31,38,45,52,-3,-10,-17,-24,-31,-38,-45,-52,
3,10,18,25,34,41,49,56,-3,-10,-18,-25,-34,-41,-49,-56,
4,12,21,29,38,46,55,63,-4,-12,-21,-29,-38,-46,-55,-63,
4,13,22,31,41,50,59,68,-4,-13,-22,-31,-41,-50,-59,-68,
5,15,25,35,46,56,66,76,-5,-15,-25,-35,-46,-56,-66,-76,
5,16,27,38,50,61,72,83,-5,-16,-27,-38,-50,-61,-72,-83,
6,18,31,43,56,68,81,93,-6,-18,-31,-43,-56,-68,-81,-93,
6,19,33,46,61,74,88,101,-6,-19,-33,-46,-61,-74,-88,-101,
7,22,37,52,67,82,97,112,-7,-22,-37,-52,-67,-82,-97,-112,
8,24,41,57,74,90,107,123,-8,-24,-41,-57,-74,-90,-107,-123,
9,27,45,63,82,100,118,136,-9,-27,-45,-63,-82,-100,-118,-136,
10,30,50,70,90,110,130,150,-10,-30,-50,-70,-90,-110,-130,-150,
11,33,55,77,99,121,143,165,-11,-33,-55,-77,-99,-121,-143,-165,
12,36,60,84,109,133,157,181,-12,-36,-60,-84,-109,-133,-157,-181,
13,39,66,92,120,146,173,199,-13,-39,-66,-92,-120,-146,-173,-199,
14,43,73,102,132,161,191,220,-14,-43,-73,-102,-132,-161,-191,-220,
16,48,81,113,146,178,211,243,-16,-48,-81,-113,-146,-178,-211,-243,
17,52,88,123,160,195,231,266,-17,-52,-88,-123,-160,-195,-231,-266,
19,58,97,136,176,215,254,293,-19,-58,-97,-136,-176,-215,-254,-293,
21,64,107,150,194,237,280,323,-21,-64,-107,-150,-194,-237,-280,-323,
23,70,118,165,213,260,308,355,-23,-70,-118,-165,-213,-260,-308,-355,
26,78,130,182,235,287,339,391,-26,-78,-130,-182,-235,-287,-339,-391,
28,85,143,200,258,315,373,430,-28,-85,-143,-200,-258,-315,-373,-430,
31,94,157,220,284,347,410,473,-31,-94,-157,-220,-284,-347,-410,-473,
34,103,173,242,313,382,452,521,-34,-103,-173,-242,-313,-382,-452,-521,
38,114,191,267,345,421,498,574,-38,-114,-191,-267,-345,-421,-498,-574,
42,126,210,294,379,463,547,631,-42,-126,-210,-294,-379,-463,-547,-631,
46,138,231,323,417,509,602,694,-46,-138,-231,-323,-417,-509,-602,-694,
51,153,255,357,459,561,663,765,-51,-153,-255,-357,-459,-561,-663,-765,
56,168,280,392,505,617,729,841,-56,-168,-280,-392,-505,-617,-729,-841,
61,184,308,431,555,678,802,925,-61,-184,-308,-431,-555,-678,-802,-925,
68,204,340,476,612,748,884,1020,-68,-204,-340,-476,-612,-748,-884,-1020,
74,223,373,522,672,821,971,1120,-74,-223,-373,-522,-672,-821,-971,-1120,
82,246,411,575,740,904,1069,1233,-82,-246,-411,-575,-740,-904,-1069,-1233,
90,271,452,633,814,995,1176,1357,-90,-271,-452,-633,-814,-995,-1176,-1357,
99,298,497,696,895,1094,1293,1492,-99,-298,-497,-696,-895,-1094,-1293,-1492,
109,328,547,766,985,1204,1423,1642,-109,-328,-547,-766,-985,-1204,-1423,-1642,
120,360,601,841,1083,1323,1564,1804,-120,-360,-601,-841,-1083,-1323,-1564,-1804,
132,397,662,927,1192,1457,1722,1987,-132,-397,-662,-927,-1192,-1457,-1722,-1987,
145,436,728,1019,1311,1602,1894,2185,-145,-436,-728,-1019,-1311,-1602,-1894,-2185,
160,480,801,1121,1442,1762,2083,2403,-160,-480,-801,-1121,-1442,-1762,-2083,-2403,
176,528,881,1233,1587,1939,2292,2644,-176,-528,-881,-1233,-1587,-1939,-2292,-2644,
194,582,970,1358,1746,2134,2522,2910,-194,-582,-970,-1358,-1746,-2134,-2522,-2910,
213,639,1066,1492,1920,2346,2773,3199,-213,-639,-1066,-1492,-1920,-2346,-2773,-3199,
234,703,1173,1642,2112,2581,3051,3520,-234,-703,-1173,-1642,-2112,-2581,-3051,-3520,
258,774,1291,1807,2324,2840,3357,3873,-258,-774,-1291,-1807,-2324,-2840,-3357,-3873,
284,852,1420,1988,2556,3124,3692,4260,-284,-852,-1420,-1988,-2556,-3124,-3692,-4260,
312,936,1561,2185,2811,3435,4060,4684,-312,-936,-1561,-2185,-2811,-3435,-4060,-4684,
343,1030,1717,2404,3092,3779,4466,5153,-343,-1030,-1717,-2404,-3092,-3779,-4466,-5153,
378,1134,1890,2646,3402,4158,4914,5670,-378,-1134,-1890,-2646,-3402,-4158,-4914,-5670,
415,1246,2078,2909,3742,4573,5405,6236,-415,-1246,-2078,-2909,-3742,-4573,-5405,-6236,
457,1372,2287,3202,4117,5032,5947,6862,-457,-1372,-2287,-3202,-4117,-5032,-5947,-6862,
503,1509,2516,3522,4529,5535,6542,7548,-503,-1509,-2516,-3522,-4529,-5535,-6542,-7548,
553,1660,2767,3874,4981,6088,7195,8302,-553,-1660,-2767,-3874,-4981,-6088,-7195,-8302,
608,1825,3043,4260,5479,6696,7914,9131,-608,-1825,-3043,-4260,-5479,-6696,-7914,-9131,
669,2008,3348,4687,6027,7366,8706,10045,-669,-2008,-3348,-4687,-6027,-7366,-8706,-10045,
736,2209,3683,5156,6630,8103,9577,11050,-736,-2209,-3683,-5156,-6630,-8103,-9577,-11050,
810,2431,4052,5673,7294,8915,10536,12157,-810,-2431,-4052,-5673,-7294,-8915,-10536,-12157,
891,2674,4457,6240,8023,9806,11589,13372,-891,-2674,-4457,-6240,-8023,-9806,-11589,-13372,
980,2941,4902,6863,8825,10786,12747,14708,-980,-2941,-4902,-6863,-8825,-10786,-12747,-14708,
1078,3235,5393,7550,9708,11865,14023,16180,-1078,-3235,-5393,-7550,-9708,-11865,-14023,-16180,
1186,3559,5932,8305,10679,13052,15425,17798,-1186,-3559,-5932,-8305,-10679,-13052,-15425,-17798,
1305,3915,6526,9136,11747,14357,16968,19578,-1305,-3915,-6526,-9136,-11747,-14357,-16968,-19578,
1435,4306,7178,10049,12922,15793,18665,21536,-1435,-4306,-7178,-10049,-12922,-15793,-18665,-21536,
1579,4737,7896,11054,14214,17372,20531,23689,-1579,-4737,-7896,-11054,-14214,-17372,-20531,-23689,
1737,5211,8686,12160,15636,19110,22585,26059,-1737,-5211,-8686,-12160,-15636,-19110,-22585,-26059,
1911,5733,9555,13377,17200,21022,24844,28666,-1911,-5733,-9555,-13377,-17200,-21022,-24844,-28666,
2102,6306,10511,14715,18920,23124,27329,31533,-2102,-6306,-10511,-14715,-18920,-23124,-27329,-31533,
2312,6937,11562,16187,20812,25437,30062,34687,-2312,-6937,-11562,-16187,-20812,-25437,-30062,-34687,
2543,7630,12718,17805,22893,27980,33068,38155,-2543,-7630,-12718,-17805,-22893,-27980,-33068,-38155,
2798,8394,13990,19586,25183,30779,36375,41971,-2798,-8394,-13990,-19586,-25183,-30779,-36375,-41971,
3077,9232,15388,21543,27700,33855,40011,46166,-3077,-9232,-15388,-21543,-27700,-33855,-40011,-46166,
3385,10156,16928,23699,30471,37242,44014,50785,-3385,-10156,-16928,-23699,-30471,-37242,-44014,-50785,
3724,11172,18621,26069,33518,40966,48415,55863,-3724,-11172,-18621,-26069,-33518,-40966,-48415,-55863,
4095,12286,20478,28669,36862,45053,53245,61436,-4095,-12286,-20478,-28669,-36862,-45053,-53245,-61436,
others => 0);
END_SIGNALS

$vhdl = <<END_VHDL;
-- Your vhdl code here
process (index, delta)
begin
    data <= std_logic_vector(to_signed(
        lut(to_integer(unsigned(index & delta))),
        data'length));
end process;
END_VHDL


{
print <<FHM_DL_COMMENTS;
FHM_DL_COMMENTS
}



print <<FHM_DL_TOP_2;
--   int_port : internal port
--   ext_port : external port

-- Comment :

library IEEE;
  use IEEE.std_logic_1164.all;
  use IEEE.std_logic_unsigned.all;
  use IEEE.numeric_std.all;

entity $instance_name is
  port (
FHM_DL_TOP_2

    print <<FHM_DL_PORTS;
	index : in std_logic_vector(6 downto 0);
	delta : in std_logic_vector(3 downto 0);
	data : out std_logic_vector($msb downto 0)
        );
FHM_DL_PORTS

{
print <<FHM_DL_ARCH;
end $instance_name;

architecture logic of $instance_name is
$signals
begin
  $vhdl
end logic;

FHM_DL_ARCH
}

exit (0);
          ]]>
        </script>
      </instance>

      <entity>
        <script>
          <![CDATA[
#!/usr/bin/perl
# This script generates register instance in behavior level
# parameter : instance_name bit_width

if ($#ARGV != 1) {
    print "number of parameters is wrong.\n";
    print "usage : this_script instance_name bit_width\n";
    exit (100);
}

$instance_name = $ARGV[0];
$bit_width     = $ARGV[1];


$msb = $bit_width - 1;

{
print <<FHM_DL_TOP;

entity $instance_name is
  port (
FHM_DL_TOP

}

    print <<FHM_DL_PORTS;
        );
FHM_DL_PORTS

{
print <<FHM_DL_BOTTOM;
end $instance_name;
FHM_DL_BOTTOM
}
exit (0);
          ]]>
        </script>
      </entity>

      <testvector>
        <testvector_script>
          <![CDATA[ ]]>
        </testvector_script>
      </testvector>

      <synthesis>
        <parameter></parameter>
        <synthesis_script>
          <script>
            <![CDATA[
#!/usr/bin/perl
# This script generates register synthesis script in behavior level
# parameter : instance_name priority bit_width

if ($#ARGV != 2) {
    print "number of parameters is wrong.\n";
    print "usage : this_script instance_name priority bit_width\n";
    exit (100);
}

$instance_name = $ARGV[0];
$priority      = $ARGV[1];
$bit_width     = $ARGV[2];


if ($priority eq "area"){
  $priority_const = "set_max_area 0";
}
elsif ($priority eq "performance"){
  $priority_const = "set_max_delay -from all_inputs() -to all_outputs() 0";
}
elsif ($priority eq "power"){
  $priority_const = "";
}
elsif ($priority eq "none"){
  $priority_const = "";
}
else {
    print "priority $priority is not supported.\n";
    exit(100);
}

{
print <<FHM_DL_END_OF_SCRIPT;
hdlin_auto_save_templates = TRUE

analyze -f vhdl $instance_name.vhd

elaborate $instance_name
uniquify

$priority_const

create_clock -period 10 -waveform{0 5} clock

compile

write -hierarchy -output $instance_name.db

report_area
report_timing

quit
FHM_DL_END_OF_SCRIPT
}
exit(0);
            ]]>
          </script>
        </synthesis_script>
      </synthesis>
    </design>

    <estimation>
      <estimation_data>
        <library name="OSAKA">

          <est_type name="shape">
            <est_index name="area">
              <unit> mm2 </unit>
              <translate>
                <translate_value key="gate"> 4201.68 </translate_value>
                <translate_value key="mm2">  1 </translate_value>
              </translate>

              <parameters name="">
                        <max>
                                <data bit_width="4"> 0.1 </data>
                                <data bit_width="8"> 0.1 </data>
                                <data bit_width="16"> 0.1 </data>
                                <data bit_width="32"> 0.1 </data>
                        </max>
                        <min>
                                <data bit_width="4"> 0.1 </data>
                                <data bit_width="8"> 0.1 </data>
                                <data bit_width="16"> 0.1 </data>
                                <data bit_width="32"> 0.1 </data>
                        </min>
                        <typ>
                                <priority name="area">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                                <priority name="delay">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                                <priority name="power">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                        </typ>
              </parameters>

            </est_index>

            <est_index name="aspect_ratio">
              <!-- Dummy yet -->
            </est_index>

            <est_index name="height">
              <!-- Dummy yet -->
            </est_index>

            <est_index name="width">
              <!-- Dummy yet -->
            </est_index>
          </est_type>

          <est_type name="timing">
            <est_index name="delay">
              <unit> ns </unit>

              <parameters name="">
                <max>
                  <data bit_width="4"> 0.75 </data>
                  <data bit_width="8"> 0.75 </data>
                  <data bit_width="16"> 0.75 </data>
                  <data bit_width="32"> 0.75 </data>
                </max>
                <min>
                  <data bit_width="4"> 0.72 </data>
                  <data bit_width="8"> 0.72 </data>
                  <data bit_width="16"> 0.72 </data>
                  <data bit_width="32"> 0.72 </data>
                </min>
                <typ>
                  <priority name="area">
                    <data bit_width="4"> 0.75 </data>
                    <data bit_width="8"> 0.75 </data>
                    <data bit_width="16"> 0.75 </data>
                    <data bit_width="32"> 0.75 </data>
                  </priority>
                  <priority name="delay">
                    <data bit_width="4"> 0.72 </data>
                    <data bit_width="8"> 0.72 </data>
                    <data bit_width="16"> 0.72 </data>
                    <data bit_width="32"> 0.72 </data>
                  </priority>
                  <priority name="power">
                    <data bit_width="4"> 0.75 </data>
                    <data bit_width="8"> 0.75 </data>
                    <data bit_width="16"> 0.75 </data>
                    <data bit_width="32"> 0.75 </data>
                  </priority>
                </typ>
              </parameters>

            </est_index>

            <est_index name="delay_fullpath">
            <!-- Dummy yet -->
            </est_index>
          </est_type>

          <est_type name="power">
            <est_index name="static_power">
              <unit> mW </unit>
              <parameters name="">
                 <max>
                  <data bit_width="4"> 2.2203 </data>
                  <data bit_width="8"> 4.4270 </data>
                  <data bit_width="16"> 8.7214 </data>
                  <data bit_width="32"> 17.2327 </data>
                </max>
                <min>
                  <data bit_width="4"> 2.2153 </data>
                  <data bit_width="8"> 4.3512 </data>
                  <data bit_width="16"> 8.5400 </data>
                  <data bit_width="32"> 17.0462 </data>
                </min>
                <typ>
                  <priority name="area">
                    <data bit_width="4"> 2.2159 </data>
                    <data bit_width="8"> 4.4179 </data>
                    <data bit_width="16"> 8.7033 </data>
                    <data bit_width="32"> 17.2202 </data>
                  </priority>
                  <priority name="delay">
                    <data bit_width="4"> 2.2203 </data>
                    <data bit_width="8"> 4.4270 </data>
                    <data bit_width="16"> 8.7214 </data>
                    <data bit_width="32"> 17.2327 </data>
                  </priority>
                  <priority name="power">
                    <data bit_width="4"> 2.2153 </data>
                    <data bit_width="8"> 4.3512 </data>
                    <data bit_width="16"> 8.5400 </data>
                    <data bit_width="32"> 17.0462 </data>
                  </priority>
                </typ>
              </parameters>

            </est_index>
          </est_type>

          <est_type name="function_cycle">
            <!-- Dummy yet -->
          </est_type>

          <est_type name="function_power">
            <!-- Dummy yet -->
          </est_type>
        </library>
      </estimation_data>

      <estimation_method>
         
        <est_type name="shape">

          <est_index name="area">
		<parameters name="">
                        <max>
                                <data bit_width="4"> 0.1 </data>
                                <data bit_width="8"> 0.1 </data>
                                <data bit_width="16"> 0.1 </data>
                                <data bit_width="32"> 0.1 </data>
                        </max>
                        <min>
                                <data bit_width="4"> 0.1 </data>
                                <data bit_width="8"> 0.1 </data>
                                <data bit_width="16"> 0.1 </data>
                                <data bit_width="32"> 0.1 </data>
                        </min>
                        <typ>
                                <priority name="area">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                                <priority name="delay">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                                <priority name="power">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                        </typ>
		</parameters>


          </est_index>

           <est_index name="aspect_ratio">

             <!-- Dummy yet -->

           </est_index>
                
           <est_index name="height">

             <!-- Dummy yet -->

           </est_index>
                
           <est_index name="width">

             <!-- Dummy yet -->

           </est_index>
                
        </est_type>

        <est_type name="timing">

          <est_index name="delay">
		<parameters name="">
                <max>
                  <data bit_width="4"> 0.75 </data>
                  <data bit_width="8"> 0.75 </data>
                  <data bit_width="16"> 0.75 </data>
                  <data bit_width="32"> 0.75 </data>
                </max>
                <min>
                  <data bit_width="4"> 0.72 </data>
                  <data bit_width="8"> 0.72 </data>
                  <data bit_width="16"> 0.72 </data>
                  <data bit_width="32"> 0.72 </data>
                </min>
                <typ>
                  <priority name="area">
                    <data bit_width="4"> 0.75 </data>
                    <data bit_width="8"> 0.75 </data>
                    <data bit_width="16"> 0.75 </data>
                    <data bit_width="32"> 0.75 </data>
                  </priority>
                  <priority name="delay">
                    <data bit_width="4"> 0.72 </data>
                    <data bit_width="8"> 0.72 </data>
                    <data bit_width="16"> 0.72 </data>
                    <data bit_width="32"> 0.72 </data>
                  </priority>
                  <priority name="power">
                    <data bit_width="4"> 0.75 </data>
                    <data bit_width="8"> 0.75 </data>
                    <data bit_width="16"> 0.75 </data>
                    <data bit_width="32"> 0.75 </data>
                  </priority>
                </typ>
		</parameters>


          </est_index>

          <est_index name="delay_fullpath">

             <!-- Dummy yet -->

          </est_index>

        </est_type>

        <est_type name="power">

          <est_index name="static_power">

		<parameters name="">
                 <max>
                  <data bit_width="4"> 2.2203 </data>
                  <data bit_width="8"> 4.4270 </data>
                  <data bit_width="16"> 8.7214 </data>
                  <data bit_width="32"> 17.2327 </data>
                </max>
                <min>
                  <data bit_width="4"> 2.2153 </data>
                  <data bit_width="8"> 4.3512 </data>
                  <data bit_width="16"> 8.5400 </data>
                  <data bit_width="32"> 17.0462 </data>
                </min>
                <typ>
                  <priority name="area">
                    <data bit_width="4"> 2.2159 </data>
                    <data bit_width="8"> 4.4179 </data>
                    <data bit_width="16"> 8.7033 </data>
                    <data bit_width="32"> 17.2202 </data>
                  </priority>
                  <priority name="delay">
                    <data bit_width="4"> 2.2203 </data>
                    <data bit_width="8"> 4.4270 </data>
                    <data bit_width="16"> 8.7214 </data>
                    <data bit_width="32"> 17.2327 </data>
                  </priority>
                  <priority name="power">
                    <data bit_width="4"> 2.2153 </data>
                    <data bit_width="8"> 4.3512 </data>
                    <data bit_width="16"> 8.5400 </data>
                    <data bit_width="32"> 17.0462 </data>
                  </priority>
                </typ>
		</parameters>


          </est_index>

        </est_type>

        <est_type name="function_cycle">

        </est_type>

        <est_type name="function_power">

        </est_type>

    
      </estimation_method>
    </estimation>

  </model>

  <model>
    <design_level> synthesis </design_level>
    <version> 1.0 </version>
    <author> <![CDATA[ asip03 ]]> </author>
    <affiliation> <![CDATA[ Uni Karlsruhe ]]> </affiliation>
    <model_info> <![CDATA[ - ]]> </model_info>

    <parameter>
      <parameter_value key="bit_width">
        <value> 16 </value>
        <value> 32 </value>
      </parameter_value>
    </parameter>

    <function_description>
      <script>
        <![CDATA[
#!/usr/bin/perl
# This script generates register function definition in behavior level
# parameter : bit_width

if ($#ARGV != 0) {
    print "number of parameters is wrong.\n";
    print "usage : this_script bit_width\n";
    exit (100);
}

$bit_width    = $ARGV[0];
$msb = $bit_width - 1;

print <<FHM_DL_LECKER;
/** lecker */
function lecker {
  input {
    bit [6:0] index;
    bit [3:0] delta;
  }
  output {
    bit [$msb:0] data;
  }
  control {
  }
  protocol {
  }
}
FHM_DL_LECKER

exit (0);
        ]]>
      </script>
    </function_description>

    <function_conv>
      <script>
        <![CDATA[
#!/usr/bin/perl
# This script generates register function definition in behavior level
# parameter : bit_width

if ($#ARGV != 0) {
    print "number of parameters is wrong.\n";
    print "usage : this_script bit_width\n";
    exit (100);
}

$bit_width    = $ARGV[0];
$msb = $bit_width - 1;

print <<FHM_DL_LECKER;
/** lecker */
function lecker {
  input {
    bit [6:0] index;
    bit [3:0] delta;
  }
  output {
    bit [$msb:0] data;
  }
  control {
  }
  protocol {
  }
}
FHM_DL_LECKER

exit (0);
        ]]>
      </script>
    </function_conv>

    <function_port>
      <script>
        <![CDATA[
#!/usr/bin/perl
# This script generates register port information in behavior level
# parameter : bit_width

if ($#ARGV != 0) {
    print "number of parameters is wrong.\n";
    print "usage : this_script bit_width\n";
    exit (100);
}

$bit_width    = $ARGV[0];

$msb = $bit_width-1;

print <<FHM_DL_PORTS;
index in bit_vector 6    0 data
delta in bit_vector 3    0 data
data out bit_vector $msb 0 data
FHM_DL_PORTS

exit (0);
        ]]>
      </script>
    </function_port>

    <design>
      <design_lang> vhdl </design_lang>

      <instance>
        <script>
          <![CDATA[
#!/usr/bin/perl
# This script generates register instance in behavior level
# parameter : instance_name bit_width

if ($#ARGV != 1) {
  print "number of parameters is wrong.\n";
  print "usage : this_script instance_name bit_width\n";
  exit (100);
}

$instance_name = $ARGV[0];
$bit_width     = $ARGV[1];


$msb = $bit_width - 1;

$signals = <<END_SIGNALS;
-- Your signal declaration here
type INT_ARRAY is array (integer range 0 to 2047) of integer;
CONSTANT lut : INT_ARRAY := (
0,1,3,4,7,8,10,11,0,-1,-3,-4,-7,-8,-10,-11,
1,3,5,7,9,11,13,15,-1,-3,-5,-7,-9,-11,-13,-15,
1,3,5,7,10,12,14,16,-1,-3,-5,-7,-10,-12,-14,-16,
1,3,6,8,11,13,16,18,-1,-3,-6,-8,-11,-13,-16,-18,
1,3,6,8,12,14,17,19,-1,-3,-6,-8,-12,-14,-17,-19,
1,4,7,10,13,16,19,22,-1,-4,-7,-10,-13,-16,-19,-22,
1,4,7,10,14,17,20,23,-1,-4,-7,-10,-14,-17,-20,-23,
1,4,8,11,15,18,22,25,-1,-4,-8,-11,-15,-18,-22,-25,
2,6,10,14,18,22,26,30,-2,-6,-10,-14,-18,-22,-26,-30,
2,6,10,14,19,23,27,31,-2,-6,-10,-14,-19,-23,-27,-31,
2,6,11,15,21,25,30,34,-2,-6,-11,-15,-21,-25,-30,-34,
2,7,12,17,23,28,33,38,-2,-7,-12,-17,-23,-28,-33,-38,
2,7,13,18,25,30,36,41,-2,-7,-13,-18,-25,-30,-36,-41,
3,9,15,21,28,34,40,46,-3,-9,-15,-21,-28,-34,-40,-46,
3,10,17,24,31,38,45,52,-3,-10,-17,-24,-31,-38,-45,-52,
3,10,18,25,34,41,49,56,-3,-10,-18,-25,-34,-41,-49,-56,
4,12,21,29,38,46,55,63,-4,-12,-21,-29,-38,-46,-55,-63,
4,13,22,31,41,50,59,68,-4,-13,-22,-31,-41,-50,-59,-68,
5,15,25,35,46,56,66,76,-5,-15,-25,-35,-46,-56,-66,-76,
5,16,27,38,50,61,72,83,-5,-16,-27,-38,-50,-61,-72,-83,
6,18,31,43,56,68,81,93,-6,-18,-31,-43,-56,-68,-81,-93,
6,19,33,46,61,74,88,101,-6,-19,-33,-46,-61,-74,-88,-101,
7,22,37,52,67,82,97,112,-7,-22,-37,-52,-67,-82,-97,-112,
8,24,41,57,74,90,107,123,-8,-24,-41,-57,-74,-90,-107,-123,
9,27,45,63,82,100,118,136,-9,-27,-45,-63,-82,-100,-118,-136,
10,30,50,70,90,110,130,150,-10,-30,-50,-70,-90,-110,-130,-150,
11,33,55,77,99,121,143,165,-11,-33,-55,-77,-99,-121,-143,-165,
12,36,60,84,109,133,157,181,-12,-36,-60,-84,-109,-133,-157,-181,
13,39,66,92,120,146,173,199,-13,-39,-66,-92,-120,-146,-173,-199,
14,43,73,102,132,161,191,220,-14,-43,-73,-102,-132,-161,-191,-220,
16,48,81,113,146,178,211,243,-16,-48,-81,-113,-146,-178,-211,-243,
17,52,88,123,160,195,231,266,-17,-52,-88,-123,-160,-195,-231,-266,
19,58,97,136,176,215,254,293,-19,-58,-97,-136,-176,-215,-254,-293,
21,64,107,150,194,237,280,323,-21,-64,-107,-150,-194,-237,-280,-323,
23,70,118,165,213,260,308,355,-23,-70,-118,-165,-213,-260,-308,-355,
26,78,130,182,235,287,339,391,-26,-78,-130,-182,-235,-287,-339,-391,
28,85,143,200,258,315,373,430,-28,-85,-143,-200,-258,-315,-373,-430,
31,94,157,220,284,347,410,473,-31,-94,-157,-220,-284,-347,-410,-473,
34,103,173,242,313,382,452,521,-34,-103,-173,-242,-313,-382,-452,-521,
38,114,191,267,345,421,498,574,-38,-114,-191,-267,-345,-421,-498,-574,
42,126,210,294,379,463,547,631,-42,-126,-210,-294,-379,-463,-547,-631,
46,138,231,323,417,509,602,694,-46,-138,-231,-323,-417,-509,-602,-694,
51,153,255,357,459,561,663,765,-51,-153,-255,-357,-459,-561,-663,-765,
56,168,280,392,505,617,729,841,-56,-168,-280,-392,-505,-617,-729,-841,
61,184,308,431,555,678,802,925,-61,-184,-308,-431,-555,-678,-802,-925,
68,204,340,476,612,748,884,1020,-68,-204,-340,-476,-612,-748,-884,-1020,
74,223,373,522,672,821,971,1120,-74,-223,-373,-522,-672,-821,-971,-1120,
82,246,411,575,740,904,1069,1233,-82,-246,-411,-575,-740,-904,-1069,-1233,
90,271,452,633,814,995,1176,1357,-90,-271,-452,-633,-814,-995,-1176,-1357,
99,298,497,696,895,1094,1293,1492,-99,-298,-497,-696,-895,-1094,-1293,-1492,
109,328,547,766,985,1204,1423,1642,-109,-328,-547,-766,-985,-1204,-1423,-1642,
120,360,601,841,1083,1323,1564,1804,-120,-360,-601,-841,-1083,-1323,-1564,-1804,
132,397,662,927,1192,1457,1722,1987,-132,-397,-662,-927,-1192,-1457,-1722,-1987,
145,436,728,1019,1311,1602,1894,2185,-145,-436,-728,-1019,-1311,-1602,-1894,-2185,
160,480,801,1121,1442,1762,2083,2403,-160,-480,-801,-1121,-1442,-1762,-2083,-2403,
176,528,881,1233,1587,1939,2292,2644,-176,-528,-881,-1233,-1587,-1939,-2292,-2644,
194,582,970,1358,1746,2134,2522,2910,-194,-582,-970,-1358,-1746,-2134,-2522,-2910,
213,639,1066,1492,1920,2346,2773,3199,-213,-639,-1066,-1492,-1920,-2346,-2773,-3199,
234,703,1173,1642,2112,2581,3051,3520,-234,-703,-1173,-1642,-2112,-2581,-3051,-3520,
258,774,1291,1807,2324,2840,3357,3873,-258,-774,-1291,-1807,-2324,-2840,-3357,-3873,
284,852,1420,1988,2556,3124,3692,4260,-284,-852,-1420,-1988,-2556,-3124,-3692,-4260,
312,936,1561,2185,2811,3435,4060,4684,-312,-936,-1561,-2185,-2811,-3435,-4060,-4684,
343,1030,1717,2404,3092,3779,4466,5153,-343,-1030,-1717,-2404,-3092,-3779,-4466,-5153,
378,1134,1890,2646,3402,4158,4914,5670,-378,-1134,-1890,-2646,-3402,-4158,-4914,-5670,
415,1246,2078,2909,3742,4573,5405,6236,-415,-1246,-2078,-2909,-3742,-4573,-5405,-6236,
457,1372,2287,3202,4117,5032,5947,6862,-457,-1372,-2287,-3202,-4117,-5032,-5947,-6862,
503,1509,2516,3522,4529,5535,6542,7548,-503,-1509,-2516,-3522,-4529,-5535,-6542,-7548,
553,1660,2767,3874,4981,6088,7195,8302,-553,-1660,-2767,-3874,-4981,-6088,-7195,-8302,
608,1825,3043,4260,5479,6696,7914,9131,-608,-1825,-3043,-4260,-5479,-6696,-7914,-9131,
669,2008,3348,4687,6027,7366,8706,10045,-669,-2008,-3348,-4687,-6027,-7366,-8706,-10045,
736,2209,3683,5156,6630,8103,9577,11050,-736,-2209,-3683,-5156,-6630,-8103,-9577,-11050,
810,2431,4052,5673,7294,8915,10536,12157,-810,-2431,-4052,-5673,-7294,-8915,-10536,-12157,
891,2674,4457,6240,8023,9806,11589,13372,-891,-2674,-4457,-6240,-8023,-9806,-11589,-13372,
980,2941,4902,6863,8825,10786,12747,14708,-980,-2941,-4902,-6863,-8825,-10786,-12747,-14708,
1078,3235,5393,7550,9708,11865,14023,16180,-1078,-3235,-5393,-7550,-9708,-11865,-14023,-16180,
1186,3559,5932,8305,10679,13052,15425,17798,-1186,-3559,-5932,-8305,-10679,-13052,-15425,-17798,
1305,3915,6526,9136,11747,14357,16968,19578,-1305,-3915,-6526,-9136,-11747,-14357,-16968,-19578,
1435,4306,7178,10049,12922,15793,18665,21536,-1435,-4306,-7178,-10049,-12922,-15793,-18665,-21536,
1579,4737,7896,11054,14214,17372,20531,23689,-1579,-4737,-7896,-11054,-14214,-17372,-20531,-23689,
1737,5211,8686,12160,15636,19110,22585,26059,-1737,-5211,-8686,-12160,-15636,-19110,-22585,-26059,
1911,5733,9555,13377,17200,21022,24844,28666,-1911,-5733,-9555,-13377,-17200,-21022,-24844,-28666,
2102,6306,10511,14715,18920,23124,27329,31533,-2102,-6306,-10511,-14715,-18920,-23124,-27329,-31533,
2312,6937,11562,16187,20812,25437,30062,34687,-2312,-6937,-11562,-16187,-20812,-25437,-30062,-34687,
2543,7630,12718,17805,22893,27980,33068,38155,-2543,-7630,-12718,-17805,-22893,-27980,-33068,-38155,
2798,8394,13990,19586,25183,30779,36375,41971,-2798,-8394,-13990,-19586,-25183,-30779,-36375,-41971,
3077,9232,15388,21543,27700,33855,40011,46166,-3077,-9232,-15388,-21543,-27700,-33855,-40011,-46166,
3385,10156,16928,23699,30471,37242,44014,50785,-3385,-10156,-16928,-23699,-30471,-37242,-44014,-50785,
3724,11172,18621,26069,33518,40966,48415,55863,-3724,-11172,-18621,-26069,-33518,-40966,-48415,-55863,
4095,12286,20478,28669,36862,45053,53245,61436,-4095,-12286,-20478,-28669,-36862,-45053,-53245,-61436,
others => 0);
END_SIGNALS

$vhdl = <<END_VHDL;
-- Your vhdl code here
process (index, delta)
begin
    data <= std_logic_vector(to_signed(
        lut(to_integer(unsigned(index & delta))),
        data'length));
end process;
END_VHDL


{
print <<FHM_DL_COMMENTS;
FHM_DL_COMMENTS
}



print <<FHM_DL_TOP_2;
--   int_port : internal port
--   ext_port : external port

-- Comment :

library IEEE;
  use IEEE.std_logic_1164.all;
  use IEEE.std_logic_unsigned.all;
  use IEEE.numeric_std.all;

entity $instance_name is
  port (
FHM_DL_TOP_2

    print <<FHM_DL_PORTS;
	index : in std_logic_vector(6 downto 0);
	delta : in std_logic_vector(3 downto 0);
	data : out std_logic_vector($msb downto 0)
        );
FHM_DL_PORTS

{
print <<FHM_DL_ARCH;
end $instance_name;

architecture logic of $instance_name is
$signals
begin
  $vhdl
end logic;

FHM_DL_ARCH
}

exit (0);
          ]]>
        </script>
      </instance>

      <entity>
        <script>
          <![CDATA[
#!/usr/bin/perl
# This script generates register instance in behavior level
# parameter : instance_name bit_width

if ($#ARGV != 1) {
    print "number of parameters is wrong.\n";
    print "usage : this_script instance_name bit_width\n";
    exit (100);
}

$instance_name = $ARGV[0];
$bit_width     = $ARGV[1];


$msb = $bit_width - 1;

{
print <<FHM_DL_TOP;

entity $instance_name is
  port (
FHM_DL_TOP

}

    print <<FHM_DL_PORTS;
        );
FHM_DL_PORTS

{
print <<FHM_DL_BOTTOM;
end $instance_name;
FHM_DL_BOTTOM
}
exit (0);
          ]]>
        </script>
      </entity>

      <testvector>
        <testvector_script>
          <![CDATA[ ]]>
        </testvector_script>
      </testvector>

      <synthesis>
        <parameter></parameter>
        <synthesis_script>
          <script>
            <![CDATA[
#!/usr/bin/perl
# This script generates register synthesis script in behavior level
# parameter : instance_name priority bit_width

if ($#ARGV != 2) {
    print "number of parameters is wrong.\n";
    print "usage : this_script instance_name priority bit_width\n";
    exit (100);
}

$instance_name = $ARGV[0];
$priority      = $ARGV[1];
$bit_width     = $ARGV[2];


if ($priority eq "area"){
  $priority_const = "set_max_area 0";
}
elsif ($priority eq "performance"){
  $priority_const = "set_max_delay -from all_inputs() -to all_outputs() 0";
}
elsif ($priority eq "power"){
  $priority_const = "";
}
elsif ($priority eq "none"){
  $priority_const = "";
}
else {
    print "priority $priority is not supported.\n";
    exit(100);
}

{
print <<FHM_DL_END_OF_SCRIPT;
hdlin_auto_save_templates = TRUE

analyze -f vhdl $instance_name.vhd

elaborate $instance_name
uniquify

$priority_const

create_clock -period 10 -waveform{0 5} clock

compile

write -hierarchy -output $instance_name.db

report_area
report_timing

quit
FHM_DL_END_OF_SCRIPT
}
exit(0);
            ]]>
          </script>
        </synthesis_script>
      </synthesis>
    </design>

    <estimation>
      <estimation_data>
        <library name="OSAKA">

          <est_type name="shape">
            <est_index name="area">
              <unit> mm2 </unit>
              <translate>
                <translate_value key="gate"> 4201.68 </translate_value>
                <translate_value key="mm2">  1 </translate_value>
              </translate>

              <parameters name="">
                        <max>
                                <data bit_width="4"> 0.1 </data>
                                <data bit_width="8"> 0.1 </data>
                                <data bit_width="16"> 0.1 </data>
                                <data bit_width="32"> 0.1 </data>
                        </max>
                        <min>
                                <data bit_width="4"> 0.1 </data>
                                <data bit_width="8"> 0.1 </data>
                                <data bit_width="16"> 0.1 </data>
                                <data bit_width="32"> 0.1 </data>
                        </min>
                        <typ>
                                <priority name="area">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                                <priority name="delay">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                                <priority name="power">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                        </typ>
              </parameters>

            </est_index>

            <est_index name="aspect_ratio">
              <!-- Dummy yet -->
            </est_index>

            <est_index name="height">
              <!-- Dummy yet -->
            </est_index>

            <est_index name="width">
              <!-- Dummy yet -->
            </est_index>
          </est_type>

          <est_type name="timing">
            <est_index name="delay">
              <unit> ns </unit>

              <parameters name="">
                <max>
                  <data bit_width="4"> 0.75 </data>
                  <data bit_width="8"> 0.75 </data>
                  <data bit_width="16"> 0.75 </data>
                  <data bit_width="32"> 0.75 </data>
                </max>
                <min>
                  <data bit_width="4"> 0.72 </data>
                  <data bit_width="8"> 0.72 </data>
                  <data bit_width="16"> 0.72 </data>
                  <data bit_width="32"> 0.72 </data>
                </min>
                <typ>
                  <priority name="area">
                    <data bit_width="4"> 0.75 </data>
                    <data bit_width="8"> 0.75 </data>
                    <data bit_width="16"> 0.75 </data>
                    <data bit_width="32"> 0.75 </data>
                  </priority>
                  <priority name="delay">
                    <data bit_width="4"> 0.72 </data>
                    <data bit_width="8"> 0.72 </data>
                    <data bit_width="16"> 0.72 </data>
                    <data bit_width="32"> 0.72 </data>
                  </priority>
                  <priority name="power">
                    <data bit_width="4"> 0.75 </data>
                    <data bit_width="8"> 0.75 </data>
                    <data bit_width="16"> 0.75 </data>
                    <data bit_width="32"> 0.75 </data>
                  </priority>
                </typ>
              </parameters>

            </est_index>

            <est_index name="delay_fullpath">
            <!-- Dummy yet -->
            </est_index>
          </est_type>

          <est_type name="power">
            <est_index name="static_power">
              <unit> mW </unit>
              <parameters name="">
                 <max>
                  <data bit_width="4"> 2.2203 </data>
                  <data bit_width="8"> 4.4270 </data>
                  <data bit_width="16"> 8.7214 </data>
                  <data bit_width="32"> 17.2327 </data>
                </max>
                <min>
                  <data bit_width="4"> 2.2153 </data>
                  <data bit_width="8"> 4.3512 </data>
                  <data bit_width="16"> 8.5400 </data>
                  <data bit_width="32"> 17.0462 </data>
                </min>
                <typ>
                  <priority name="area">
                    <data bit_width="4"> 2.2159 </data>
                    <data bit_width="8"> 4.4179 </data>
                    <data bit_width="16"> 8.7033 </data>
                    <data bit_width="32"> 17.2202 </data>
                  </priority>
                  <priority name="delay">
                    <data bit_width="4"> 2.2203 </data>
                    <data bit_width="8"> 4.4270 </data>
                    <data bit_width="16"> 8.7214 </data>
                    <data bit_width="32"> 17.2327 </data>
                  </priority>
                  <priority name="power">
                    <data bit_width="4"> 2.2153 </data>
                    <data bit_width="8"> 4.3512 </data>
                    <data bit_width="16"> 8.5400 </data>
                    <data bit_width="32"> 17.0462 </data>
                  </priority>
                </typ>
              </parameters>

            </est_index>
          </est_type>

          <est_type name="function_cycle">
            <!-- Dummy yet -->
          </est_type>

          <est_type name="function_power">
            <!-- Dummy yet -->
          </est_type>
        </library>
      </estimation_data>

      <estimation_method>
         
        <est_type name="shape">

          <est_index name="area">
		<parameters name="">
                        <max>
                                <data bit_width="4"> 0.1 </data>
                                <data bit_width="8"> 0.1 </data>
                                <data bit_width="16"> 0.1 </data>
                                <data bit_width="32"> 0.1 </data>
                        </max>
                        <min>
                                <data bit_width="4"> 0.1 </data>
                                <data bit_width="8"> 0.1 </data>
                                <data bit_width="16"> 0.1 </data>
                                <data bit_width="32"> 0.1 </data>
                        </min>
                        <typ>
                                <priority name="area">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                                <priority name="delay">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                                <priority name="power">
                                        <data bit_width="4"> 0.001 </data>
                                        <data bit_width="8"> 0.01 </data>
                                        <data bit_width="16"> 0.1 </data>
                                        <data bit_width="32"> 0.1 </data>
                                </priority>
                        </typ>
		</parameters>


          </est_index>

           <est_index name="aspect_ratio">

             <!-- Dummy yet -->

           </est_index>
                
           <est_index name="height">

             <!-- Dummy yet -->

           </est_index>
                
           <est_index name="width">

             <!-- Dummy yet -->

           </est_index>
                
        </est_type>

        <est_type name="timing">

          <est_index name="delay">
		<parameters name="">
                <max>
                  <data bit_width="4"> 0.75 </data>
                  <data bit_width="8"> 0.75 </data>
                  <data bit_width="16"> 0.75 </data>
                  <data bit_width="32"> 0.75 </data>
                </max>
                <min>
                  <data bit_width="4"> 0.72 </data>
                  <data bit_width="8"> 0.72 </data>
                  <data bit_width="16"> 0.72 </data>
                  <data bit_width="32"> 0.72 </data>
                </min>
                <typ>
                  <priority name="area">
                    <data bit_width="4"> 0.75 </data>
                    <data bit_width="8"> 0.75 </data>
                    <data bit_width="16"> 0.75 </data>
                    <data bit_width="32"> 0.75 </data>
                  </priority>
                  <priority name="delay">
                    <data bit_width="4"> 0.72 </data>
                    <data bit_width="8"> 0.72 </data>
                    <data bit_width="16"> 0.72 </data>
                    <data bit_width="32"> 0.72 </data>
                  </priority>
                  <priority name="power">
                    <data bit_width="4"> 0.75 </data>
                    <data bit_width="8"> 0.75 </data>
                    <data bit_width="16"> 0.75 </data>
                    <data bit_width="32"> 0.75 </data>
                  </priority>
                </typ>
		</parameters>


          </est_index>

          <est_index name="delay_fullpath">

             <!-- Dummy yet -->

          </est_index>

        </est_type>

        <est_type name="power">

          <est_index name="static_power">

		<parameters name="">
                 <max>
                  <data bit_width="4"> 2.2203 </data>
                  <data bit_width="8"> 4.4270 </data>
                  <data bit_width="16"> 8.7214 </data>
                  <data bit_width="32"> 17.2327 </data>
                </max>
                <min>
                  <data bit_width="4"> 2.2153 </data>
                  <data bit_width="8"> 4.3512 </data>
                  <data bit_width="16"> 8.5400 </data>
                  <data bit_width="32"> 17.0462 </data>
                </min>
                <typ>
                  <priority name="area">
                    <data bit_width="4"> 2.2159 </data>
                    <data bit_width="8"> 4.4179 </data>
                    <data bit_width="16"> 8.7033 </data>
                    <data bit_width="32"> 17.2202 </data>
                  </priority>
                  <priority name="delay">
                    <data bit_width="4"> 2.2203 </data>
                    <data bit_width="8"> 4.4270 </data>
                    <data bit_width="16"> 8.7214 </data>
                    <data bit_width="32"> 17.2327 </data>
                  </priority>
                  <priority name="power">
                    <data bit_width="4"> 2.2153 </data>
                    <data bit_width="8"> 4.3512 </data>
                    <data bit_width="16"> 8.5400 </data>
                    <data bit_width="32"> 17.0462 </data>
                  </priority>
                </typ>
		</parameters>


          </est_index>

        </est_type>

        <est_type name="function_cycle">

        </est_type>

        <est_type name="function_power">

        </est_type>

    
      </estimation_method>
    </estimation>

  </model>
</FHM>
